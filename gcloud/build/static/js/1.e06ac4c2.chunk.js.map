{"version":3,"sources":["../node_modules/axios/lib/utils.js","../node_modules/antd/lib/typography/Paragraph.js","../node_modules/axios/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../src/converters.ts","../../src/common.ts","../../src/primitives_32.ts","../../src/sha1.ts","../../src/sha256.ts","../../src/primitives_64.ts","../../src/sha512.ts","../../src/sha3.ts","../../src/sha.ts","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js"],"names":["bind","require","toString","Object","prototype","isArray","val","call","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","forEach","obj","fn","i","l","length","key","hasOwnProperty","module","exports","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","slice","arguments","extend","a","b","thisArg","trim","str","replace","stripBOM","content","charCodeAt","_interopRequireWildcard","_interopRequireDefault","defineProperty","value","_extends2","React","_Base","_default","props","createElement","component","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","_typeof","Symbol","iterator","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","Super","NewTarget","this","apply","b64Tab","uint8array2packed","arr","existingPacked","existingPackedLen","bigEndianMod","intOffset","byteOffset","packed","existingByteLen","shiftModifier","push","binLen","getStrConverter","format","utfType","Error","existingBin","existingBinLen","num","parseInt","substr","isNaN","codePnt","codePntArr","j","transposeBytes","byteCnt","tmpInt","strPart","firstEqual","indexOf","search","charAt","ignore","Uint8Array","getOutputConverter","outputBinLen","outputOptions","binarray","outputLength","formatOpts","srcByte","toUpperCase","triplet","int1","int2","String","fromCharCode","retVal","arrView","K_sha2","H_trunc","H_full","sha_variant_error","packedLEConcat","arrOffset","aByteLen","bByteLen","leftShiftAmount","rightShiftAmount","pop","concat","getOutputOpts","options","outputUpper","b64Pad","outputLen","lenErrstr","parseInputOption","fallback","errStr","jsSHABase","[object Object]","variant","inputFormat","inputOptions","numRounds","shaVariant","remainder","remainderLen","updateCalled","processedLen","macKeySet","keyWithIPad","keyWithOPad","srcString","updateProcessedLen","variantBlockIntInc","variantBlockSize","convertRet","converterFunc","chunkBinLen","chunk","chunkIntLen","intermediateState","roundFunc","finalizedState","isVariableLen","formatFunc","getMAC","finalizeFunc","stateCloneFunc","newStateFunc","HMACSupported","keyConverterFunc","_setHMACKey","blockByteSize","lastArrayIndex","_getHMAC","firstHash","rotl_32","x","n","rotr_32","shr_32","parity_32","y","z","ch_32","maj_32","sigma0_32","safeAdd_32_2","lsw","safeAdd_32_4","c","d","safeAdd_32_5","gamma0_32","sigma1_32","getNewState","_variant","roundSHA1","block","H","T","t","W","finalizeSHA1","remainderBinLen","processedBinLen","offset","totalLen","jsSHA","resolvedOptions","super","state","getNewState256","roundSHA256","f","g","h","T1","T2","Int_64","msint_32","lsint_32","highOrder","lowOrder","rotl_64","tmp","rotr_64","shr_64","maj_64","sigma0_64","rotr28","rotr34","rotr39","safeAdd_64_2","msw","safeAdd_64_4","safeAdd_64_5","xor_64_2","gamma1_64","rotr19","rotr61","shr6","gamma0_64","rotr1","rotr8","shr7","sigma1_64","rotr14","rotr18","rotr41","K_sha512","getNewState512","roundSHA512","rc_sha3","r_sha3","cloneSHA3State","clone","roundSHA3","round","B","C","D","left_encode","byte","numEncodedBytes","x_64","encode_string","input","byte_pad","outputByteLen","encodedLen","outputIntLen","intsToAppend","delimiter","_initializeKMAC","_getKMAC","_initializeCSHAKE","_processedBinLen","blockSize","temp","state_offset","binaryStringInc","remainderIntLen","funcNameOverride","funcName","customization","packedParams","byte_pad_out","kmacKey","concatedRemainder","shaObj","jsSHA1","jsSHA256","jsSHA512","jsSHA3","update","getHash","setHMACKey","getHMAC","args","Array","utils","encode","encodeURIComponent","url","params","paramsSerializer","serializedParams","parts","v","toISOString","JSON","stringify","join","hashmarkIndex","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","process","getDefaultAdapter","transformRequest","data","transformResponse","parse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","method","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","config","Promise","resolve","reject","requestData","requestHeaders","request","auth","username","password","unescape","Authorization","btoa","fullPath","baseURL","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","code","error","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","source","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","Cancel","CloseOutlined","ref","AntdIcon","assign","icon","CloseOutlinedSvg","displayName","Axios","mergeConfig","createInstance","defaultConfig","context","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","isAxiosError","default","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","getUri","handlers","use","eject","id","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","normalizedName","name","toJSON","description","number","fileName","lineNumber","columnNumber","stack","write","expires","path","domain","secure","cookie","toGMTString","match","RegExp","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","requestedURL","test","relativeURL","ignoreDuplicateOf","parsed","split","line","originURL","msie","userAgent","urlParsingNode","resolveURL","href","setAttribute","protocol","host","hash","hostname","port","pathname","location","requestURL","executor","resolvePromise","token","callback","payload"],"mappings":"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tB,IAAIuG,EAAOvG,EAAO,GAAI,YACtB,IAAIuG,EAAOvG,EAAO,GAAI,YACtB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,WACvB,IAAIuG,EAAOvG,EAAO,IAAK,WACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,WACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,WACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,WACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,WACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,WACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,YACvB,IAAIuG,EAAOvG,EAAO,IAAK,WAC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","file":"static/js/1.e06ac4c2.chunk.js","sourcesContent":["'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Base = _interopRequireDefault(require(\"./Base\"));\n\nvar Paragraph = function Paragraph(props) {\n  return /*#__PURE__*/React.createElement(_Base[\"default\"], (0, _extends2[\"default\"])({}, props, {\n    component: \"div\"\n  }));\n};\n\nvar _default = Paragraph;\nexports[\"default\"] = _default;","module.exports = require('./lib/axios');","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import { packedValue, EncodingType, FormatType } from \"./custom_types\";\n/**\n * Return type for all the *2packed functions\n */\nconst b64Tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nconst arraybuffer_error = \"ARRAYBUFFER not supported by this environment\";\nconst uint8array_error = \"UINT8ARRAY not supported by this environment\";\n\n/**\n * Convert a string to an array of words.\n *\n * There is a known bug with an odd number of existing bytes and using a UTF-16 encoding.  However, this function is\n * used such that the existing bytes are always a result of a previous UTF-16 str2packed call and therefore there \n * should never be an odd number of existing bytes.\n\n * @param str Unicode string to be converted to binary representation.\n * @param utfType The Unicode type to use to encode the source string.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked`.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction str2packed(\n  str: string,\n  utfType: EncodingType,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let codePnt,\n    codePntArr,\n    byteCnt = 0,\n    i,\n    j,\n    intOffset,\n    byteOffset,\n    shiftModifier,\n    transposeBytes;\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3;\n\n  if (\"UTF8\" === utfType) {\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n    for (i = 0; i < str.length; i += 1) {\n      codePnt = str.charCodeAt(i);\n      codePntArr = [];\n\n      if (0x80 > codePnt) {\n        codePntArr.push(codePnt);\n      } else if (0x800 > codePnt) {\n        codePntArr.push(0xc0 | (codePnt >>> 6));\n        codePntArr.push(0x80 | (codePnt & 0x3f));\n      } else if (0xd800 > codePnt || 0xe000 <= codePnt) {\n        codePntArr.push(0xe0 | (codePnt >>> 12), 0x80 | ((codePnt >>> 6) & 0x3f), 0x80 | (codePnt & 0x3f));\n      } else {\n        i += 1;\n        codePnt = 0x10000 + (((codePnt & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n        codePntArr.push(\n          0xf0 | (codePnt >>> 18),\n          0x80 | ((codePnt >>> 12) & 0x3f),\n          0x80 | ((codePnt >>> 6) & 0x3f),\n          0x80 | (codePnt & 0x3f)\n        );\n      }\n\n      for (j = 0; j < codePntArr.length; j += 1) {\n        byteOffset = byteCnt + existingByteLen;\n        intOffset = byteOffset >>> 2;\n        while (packed.length <= intOffset) {\n          packed.push(0);\n        }\n        /* Known bug kicks in here */\n        packed[intOffset] |= codePntArr[j] << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n        byteCnt += 1;\n      }\n    }\n  } else {\n    /* UTF16BE or UTF16LE */\n    shiftModifier = bigEndianMod === -1 ? 2 : 0;\n    /* Internally strings are UTF-16BE so transpose bytes under two conditions:\n     * need LE and not switching endianness due to SHA-3\n     * need BE and switching endianness due to SHA-3 */\n    transposeBytes = (\"UTF16LE\" === utfType && bigEndianMod !== 1) || (\"UTF16LE\" !== utfType && bigEndianMod === 1);\n    for (i = 0; i < str.length; i += 1) {\n      codePnt = str.charCodeAt(i);\n      if (transposeBytes === true) {\n        j = codePnt & 0xff;\n        codePnt = (j << 8) | (codePnt >>> 8);\n      }\n\n      byteOffset = byteCnt + existingByteLen;\n      intOffset = byteOffset >>> 2;\n      while (packed.length <= intOffset) {\n        packed.push(0);\n      }\n      packed[intOffset] |= codePnt << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n      byteCnt += 2;\n    }\n  }\n  return { value: packed, binLen: byteCnt * 8 + existingPackedLen };\n}\n\n/**\n * Convert a hex string to an array of words.\n *\n * @param str Hexadecimal string to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction hex2packed(\n  str: string,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let i, num, intOffset, byteOffset;\n\n  if (0 !== str.length % 2) {\n    throw new Error(\"String of HEX type must be in byte increments\");\n  }\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < str.length; i += 2) {\n    num = parseInt(str.substr(i, 2), 16);\n    if (!isNaN(num)) {\n      byteOffset = (i >>> 1) + existingByteLen;\n      intOffset = byteOffset >>> 2;\n      while (packed.length <= intOffset) {\n        packed.push(0);\n      }\n      packed[intOffset] |= num << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n    } else {\n      throw new Error(\"String of HEX type contains invalid characters\");\n    }\n  }\n\n  return { value: packed, binLen: str.length * 4 + existingPackedLen };\n}\n\n/**\n * Convert a string of raw bytes to an array of words.\n *\n * @param str String of raw bytes to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction bytes2packed(\n  str: string,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let codePnt, i, intOffset, byteOffset;\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < str.length; i += 1) {\n    codePnt = str.charCodeAt(i);\n\n    byteOffset = i + existingByteLen;\n    intOffset = byteOffset >>> 2;\n    if (packed.length <= intOffset) {\n      packed.push(0);\n    }\n    packed[intOffset] |= codePnt << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n  }\n\n  return { value: packed, binLen: str.length * 8 + existingPackedLen };\n}\n\n/**\n * Convert a base-64 string to an array of words.\n *\n * @param str Base64-encoded string to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction b642packed(\n  str: string,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let byteCnt = 0,\n    index,\n    i,\n    j,\n    tmpInt,\n    strPart,\n    intOffset,\n    byteOffset;\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0,\n    firstEqual = str.indexOf(\"=\");\n\n  if (-1 === str.search(/^[a-zA-Z0-9=+/]+$/)) {\n    throw new Error(\"Invalid character in base-64 string\");\n  }\n\n  str = str.replace(/=/g, \"\");\n  if (-1 !== firstEqual && firstEqual < str.length) {\n    throw new Error(\"Invalid '=' found in base-64 string\");\n  }\n\n  for (i = 0; i < str.length; i += 4) {\n    strPart = str.substr(i, 4);\n    tmpInt = 0;\n\n    for (j = 0; j < strPart.length; j += 1) {\n      index = b64Tab.indexOf(strPart.charAt(j));\n      tmpInt |= index << (18 - 6 * j);\n    }\n\n    for (j = 0; j < strPart.length - 1; j += 1) {\n      byteOffset = byteCnt + existingByteLen;\n      intOffset = byteOffset >>> 2;\n      while (packed.length <= intOffset) {\n        packed.push(0);\n      }\n      packed[intOffset] |=\n        ((tmpInt >>> (16 - j * 8)) & 0xff) << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n      byteCnt += 1;\n    }\n  }\n\n  return { value: packed, binLen: byteCnt * 8 + existingPackedLen };\n}\n\n/**\n * Convert an Uint8Array to an array of words.\n *\n * @param arr Uint8Array to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction uint8array2packed(\n  arr: Uint8Array,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  let i, intOffset, byteOffset;\n\n  existingPackedLen = existingPackedLen || 0;\n  const packed = existingPacked || [0],\n    existingByteLen = existingPackedLen >>> 3,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < arr.length; i += 1) {\n    byteOffset = i + existingByteLen;\n    intOffset = byteOffset >>> 2;\n    if (packed.length <= intOffset) {\n      packed.push(0);\n    }\n    packed[intOffset] |= arr[i] << (8 * (shiftModifier + bigEndianMod * (byteOffset % 4)));\n  }\n\n  return { value: packed, binLen: arr.length * 8 + existingPackedLen };\n}\n\n/**\n * Convert an ArrayBuffer to an array of words\n *\n * @param arr ArrayBuffer to be converted to binary representation.\n * @param existingPacked A packed int array of bytes to append the results to.\n * @param existingPackedLen The number of bits in `existingPacked` array.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Hashmap of the packed values.\n */\nfunction arraybuffer2packed(\n  arr: ArrayBuffer,\n  existingPacked: number[] | undefined,\n  existingPackedLen: number | undefined,\n  bigEndianMod: -1 | 1\n): packedValue {\n  return uint8array2packed(new Uint8Array(arr), existingPacked, existingPackedLen, bigEndianMod);\n}\n\n/**\n * Function that takes an input format and UTF encoding and returns the appropriate function used to convert the input.\n *\n * @param format The format of the input to be converted\n * @param utfType The string encoding to use for TEXT inputs.\n * @param bigEndianMod Modifier for whether hash function is big or small endian\n * @returns Function that will convert an input to a packed int array.\n */\nexport function getStrConverter(\n  format: FormatType,\n  utfType: EncodingType,\n  bigEndianMod: -1 | 1\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n): (input: any, existingBin?: number[], existingBinLen?: number) => packedValue {\n  /* Validate encoding */\n  switch (utfType) {\n    case \"UTF8\":\n    /* Fallthrough */\n    case \"UTF16BE\":\n    /* Fallthrough */\n    case \"UTF16LE\":\n      /* Fallthrough */\n      break;\n    default:\n      throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n  }\n\n  /* Map inputFormat to the appropriate converter */\n  switch (format) {\n    case \"HEX\":\n      /**\n       * @param str String of hexadecimal bytes to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (str: string, existingBin?: number[], existingBinLen?: number): packedValue {\n        return hex2packed(str, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"TEXT\":\n      /**\n       * @param str Unicode string to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (str: string, existingBin?: number[], existingBinLen?: number): packedValue {\n        return str2packed(str, utfType, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"B64\":\n      /**\n       * @param str Base64-encoded string to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (str: string, existingBin?: number[], existingBinLen?: number): packedValue {\n        return b642packed(str, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"BYTES\":\n      /**\n       * @param str String of raw bytes to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (str: string, existingBin?: number[], existingBinLen?: number): packedValue {\n        return bytes2packed(str, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"ARRAYBUFFER\":\n      try {\n        new ArrayBuffer(0);\n      } catch (ignore) {\n        throw new Error(arraybuffer_error);\n      }\n      /**\n       * @param arr ArrayBuffer to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (arr: ArrayBuffer, existingBin?: number[], existingBinLen?: number): packedValue {\n        return arraybuffer2packed(arr, existingBin, existingBinLen, bigEndianMod);\n      };\n    case \"UINT8ARRAY\":\n      try {\n        new Uint8Array(0);\n      } catch (ignore) {\n        throw new Error(uint8array_error);\n      }\n      /**\n       * @param arr Uint8Array to be converted to binary representation.\n       * @param existingPacked A packed int array of bytes to append the results to.\n       * @param existingPackedLen The number of bits in `existingPacked` array.\n       * @returns Hashmap of the packed values.\n       */\n      return function (arr: Uint8Array, existingBin?: number[], existingBinLen?: number): packedValue {\n        return uint8array2packed(arr, existingBin, existingBinLen, bigEndianMod);\n      };\n    default:\n      throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\");\n  }\n}\n\n/**\n * Convert an array of words to a hexadecimal string.\n *\n * toString() won't work here because it removes preceding zeros (e.g. 0x00000001.toString === \"1\" rather than\n * \"00000001\" and 0.toString(16) === \"0\" rather than \"00\").\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @param formatOpts Hashmap containing validated output formatting options.\n * @returns Hexadecimal representation of `packed`.\n */\nexport function packed2hex(\n  packed: number[],\n  outputLength: number,\n  bigEndianMod: -1 | 1,\n  formatOpts: { outputUpper: boolean; b64Pad: string }\n): string {\n  const hex_tab = \"0123456789abcdef\";\n  let str = \"\",\n    i,\n    srcByte;\n\n  const length = outputLength / 8,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < length; i += 1) {\n    /* The below is more than a byte but it gets taken care of later */\n    srcByte = packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)));\n    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);\n  }\n\n  return formatOpts[\"outputUpper\"] ? str.toUpperCase() : str;\n}\n\n/**\n * Convert an array of words to a base-64 string.\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @param formatOpts Hashmap containing validated output formatting options.\n * @returns Base64-encoded representation of `packed`.\n */\nexport function packed2b64(\n  packed: number[],\n  outputLength: number,\n  bigEndianMod: -1 | 1,\n  formatOpts: { outputUpper: boolean; b64Pad: string }\n): string {\n  let str = \"\",\n    i,\n    j,\n    triplet,\n    int1,\n    int2;\n\n  const length = outputLength / 8,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < length; i += 3) {\n    int1 = i + 1 < length ? packed[(i + 1) >>> 2] : 0;\n    int2 = i + 2 < length ? packed[(i + 2) >>> 2] : 0;\n    triplet =\n      (((packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)))) & 0xff) << 16) |\n      (((int1 >>> (8 * (shiftModifier + bigEndianMod * ((i + 1) % 4)))) & 0xff) << 8) |\n      ((int2 >>> (8 * (shiftModifier + bigEndianMod * ((i + 2) % 4)))) & 0xff);\n    for (j = 0; j < 4; j += 1) {\n      if (i * 8 + j * 6 <= outputLength) {\n        str += b64Tab.charAt((triplet >>> (6 * (3 - j))) & 0x3f);\n      } else {\n        str += formatOpts[\"b64Pad\"];\n      }\n    }\n  }\n  return str;\n}\n\n/**\n * Convert an array of words to raw bytes string.\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns Raw bytes representation of `packed`.\n */\nexport function packed2bytes(packed: number[], outputLength: number, bigEndianMod: -1 | 1): string {\n  let str = \"\",\n    i,\n    srcByte;\n\n  const length = outputLength / 8,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < length; i += 1) {\n    srcByte = (packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)))) & 0xff;\n    str += String.fromCharCode(srcByte);\n  }\n\n  return str;\n}\n\n/**\n * Convert an array of words to an ArrayBuffer.\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns An ArrayBuffer containing bytes from `packed.\n */\nexport function packed2arraybuffer(packed: number[], outputLength: number, bigEndianMod: -1 | 1): ArrayBuffer {\n  let i;\n  const length = outputLength / 8,\n    retVal = new ArrayBuffer(length),\n    arrView = new Uint8Array(retVal),\n    shiftModifier = bigEndianMod === -1 ? 3 : 0;\n\n  for (i = 0; i < length; i += 1) {\n    arrView[i] = (packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)))) & 0xff;\n  }\n\n  return retVal;\n}\n\n/**\n * Convert an array of words to an Uint8Array.\n *\n * @param packed Array of integers to be converted.\n * @param outputLength Length of output in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @returns An Uint8Array containing bytes from `packed.\n */\nexport function packed2uint8array(packed: number[], outputLength: number, bigEndianMod: -1 | 1): Uint8Array {\n  let i;\n  const length = outputLength / 8,\n    shiftModifier = bigEndianMod === -1 ? 3 : 0,\n    retVal = new Uint8Array(length);\n\n  for (i = 0; i < length; i += 1) {\n    retVal[i] = (packed[i >>> 2] >>> (8 * (shiftModifier + bigEndianMod * (i % 4)))) & 0xff;\n  }\n\n  return retVal;\n}\n\n/**\n * Function that takes an output format and associated parameters and returns a function that converts packed integers\n * to that format.\n *\n * @param format The desired output formatting.\n * @param outputBinLen Output length in bits.\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @param outputOptions Hashmap of output formatting options\n * @returns Function that will convert a packed integer array to desired format.\n */\nexport function getOutputConverter(\n  format: \"HEX\" | \"B64\" | \"BYTES\" | \"ARRAYBUFFER\" | \"UINT8ARRAY\",\n  outputBinLen: number,\n  bigEndianMod: -1 | 1,\n  outputOptions: { outputUpper: boolean; b64Pad: string }\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n): (binarray: number[]) => any {\n  switch (format) {\n    case \"HEX\":\n      return function (binarray): string {\n        return packed2hex(binarray, outputBinLen, bigEndianMod, outputOptions);\n      };\n    case \"B64\":\n      return function (binarray): string {\n        return packed2b64(binarray, outputBinLen, bigEndianMod, outputOptions);\n      };\n    case \"BYTES\":\n      return function (binarray): string {\n        return packed2bytes(binarray, outputBinLen, bigEndianMod);\n      };\n    case \"ARRAYBUFFER\":\n      try {\n        /* Need to test ArrayBuffer support */\n        new ArrayBuffer(0);\n      } catch (ignore) {\n        throw new Error(arraybuffer_error);\n      }\n      return function (binarray): ArrayBuffer {\n        return packed2arraybuffer(binarray, outputBinLen, bigEndianMod);\n      };\n    case \"UINT8ARRAY\":\n      try {\n        /* Need to test Uint8Array support */\n        new Uint8Array(0);\n      } catch (ignore) {\n        throw new Error(uint8array_error);\n      }\n      return function (binarray): Uint8Array {\n        return packed2uint8array(binarray, outputBinLen, bigEndianMod);\n      };\n    default:\n      throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\");\n  }\n}\n","import { getStrConverter, getOutputConverter } from \"./converters\";\n\nimport {\n  FormatType,\n  EncodingType,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n  packedValue,\n  GenericInputType,\n} from \"./custom_types\";\n\nexport const TWO_PWR_32 = 4294967296;\n\n/* Constant used in SHA-2 families */\nexport const K_sha2 = [\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2,\n];\n\n/* Constant used in SHA-2 families */\nexport const H_trunc = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n\n/* Constant used in SHA-2 families */\nexport const H_full = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n\nexport const sha_variant_error = \"Chosen SHA variant is not supported\";\nexport const mac_rounds_error = \"Cannot set numRounds with MAC\";\n\n/**\n * Concatenates 2 packed arrays. Clobbers array `a`.\n *\n * @param a First array to concatenate.\n * @param b Second array to concatenate.\n * @returns The concatentation of `a` + `b`.\n */\nexport function packedLEConcat(a: packedValue, b: packedValue): packedValue {\n  let i, arrOffset;\n  const aByteLen = a[\"binLen\"] >>> 3,\n    bByteLen = b[\"binLen\"] >>> 3,\n    leftShiftAmount = aByteLen << 3,\n    rightShiftAmount = (4 - aByteLen) << 3;\n\n  /* If a only contains \"full\" integers, we can just use concat which is so much easier */\n  if (aByteLen % 4 !== 0) {\n    for (i = 0; i < bByteLen; i += 4) {\n      arrOffset = (aByteLen + i) >>> 2;\n      /* Left shift chops off bits over 32-bits */\n      a[\"value\"][arrOffset] |= b[\"value\"][i >>> 2] << leftShiftAmount;\n      a[\"value\"].push(0);\n      a[\"value\"][arrOffset + 1] |= b[\"value\"][i >>> 2] >>> rightShiftAmount;\n    }\n\n    /* Since an unconditional push was performed above, we may have pushed an extra value if it could have been\n       encoded without it.  Check if popping an int off (reducing total length by 4 bytes) is still bigger than the\n       needed size. */\n    if ((a[\"value\"].length << 2) - 4 >= bByteLen + aByteLen) {\n      a[\"value\"].pop();\n    }\n\n    return { value: a[\"value\"], binLen: a[\"binLen\"] + b[\"binLen\"] };\n  } else {\n    return { value: a[\"value\"].concat(b[\"value\"]), binLen: a[\"binLen\"] + b[\"binLen\"] };\n  }\n}\n\n/**\n * Validate hash list containing output formatting options, ensuring presence of every option or adding the default\n * value.\n *\n * @param options Hashmap of output formatting options from user.\n * @returns Validated hashmap containing output formatting options.\n */\nexport function getOutputOpts(options?: {\n  outputUpper?: boolean;\n  b64Pad?: string;\n  shakeLen?: number;\n  outputLen?: number;\n}): { outputUpper: boolean; b64Pad: string; outputLen: number } {\n  const retVal = { outputUpper: false, b64Pad: \"=\", outputLen: -1 },\n    outputOptions: { outputUpper?: boolean; b64Pad?: string; shakeLen?: number; outputLen?: number } = options || {},\n    lenErrstr = \"Output length must be a multiple of 8\";\n\n  retVal[\"outputUpper\"] = outputOptions[\"outputUpper\"] || false;\n\n  if (outputOptions[\"b64Pad\"]) {\n    retVal[\"b64Pad\"] = outputOptions[\"b64Pad\"];\n  }\n\n  if (outputOptions[\"outputLen\"]) {\n    if (outputOptions[\"outputLen\"] % 8 !== 0) {\n      throw new Error(lenErrstr);\n    }\n    retVal[\"outputLen\"] = outputOptions[\"outputLen\"];\n  } else if (outputOptions[\"shakeLen\"]) {\n    if (outputOptions[\"shakeLen\"] % 8 !== 0) {\n      throw new Error(lenErrstr);\n    }\n    retVal[\"outputLen\"] = outputOptions[\"shakeLen\"];\n  }\n\n  if (\"boolean\" !== typeof retVal[\"outputUpper\"]) {\n    throw new Error(\"Invalid outputUpper formatting option\");\n  }\n\n  if (\"string\" !== typeof retVal[\"b64Pad\"]) {\n    throw new Error(\"Invalid b64Pad formatting option\");\n  }\n\n  return retVal;\n}\n\n/**\n * Parses an external constructor object and returns a packed number, if possible.\n *\n * @param key The human-friendly key name to prefix any errors with\n * @param value The input value object to parse\n * @param bigEndianMod Modifier for whether hash function is big or small endian.\n * @param fallback Fallback value if `value` is undefined.  If not present and `value` is undefined, an Error is thrown\n */\nexport function parseInputOption(\n  key: string,\n  value: GenericInputType | undefined,\n  bigEndianMod: -1 | 1,\n  fallback?: packedValue\n): packedValue {\n  const errStr = key + \" must include a value and format\";\n  if (!value) {\n    if (!fallback) {\n      throw new Error(errStr);\n    }\n    return fallback;\n  }\n\n  if (typeof value[\"value\"] === \"undefined\" || !value[\"format\"]) {\n    throw new Error(errStr);\n  }\n\n  return getStrConverter(\n    value[\"format\"],\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore - the value of encoding gets value checked by getStrConverter\n    value[\"encoding\"] || \"UTF8\",\n    bigEndianMod\n  )(value[\"value\"]);\n}\n\nexport abstract class jsSHABase<StateT, VariantT> {\n  /**\n   * @param variant The desired SHA variant.\n   * @param inputFormat The input format to be used in future `update` calls.\n   * @param options Hashmap of extra input options.\n   */\n  /* Needed inputs */\n  protected readonly shaVariant: VariantT;\n  protected readonly inputFormat: FormatType;\n  protected readonly utfType: EncodingType;\n  protected readonly numRounds: number;\n\n  /* State */\n  protected abstract intermediateState: StateT;\n  protected keyWithIPad: number[];\n  protected keyWithOPad: number[];\n  protected remainder: number[];\n  protected remainderLen: number;\n  protected updateCalled: boolean;\n  protected processedLen: number;\n  protected macKeySet: boolean;\n\n  /* Variant specifics */\n  protected abstract readonly variantBlockSize: number;\n  protected abstract readonly bigEndianMod: -1 | 1;\n  protected abstract readonly outputBinLen: number;\n  protected abstract readonly isVariableLen: boolean;\n  protected abstract readonly HMACSupported: boolean;\n\n  /* Functions */\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  protected abstract readonly converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  protected abstract readonly roundFunc: (block: number[], H: StateT) => StateT;\n  protected abstract readonly finalizeFunc: (\n    remainder: number[],\n    remainderBinLen: number,\n    processedBinLen: number,\n    H: StateT,\n    outputLen: number\n  ) => number[];\n  protected abstract readonly stateCloneFunc: (state: StateT) => StateT;\n  protected abstract readonly newStateFunc: (variant: VariantT) => StateT;\n  protected abstract readonly getMAC: ((options: { outputLen: number }) => number[]) | null;\n\n  protected constructor(variant: VariantT, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  protected constructor(variant: VariantT, inputFormat: FormatNoTextType, options?: FixedLengthOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected constructor(variant: any, inputFormat: any, options?: any) {\n    const inputOptions = options || {};\n    this.inputFormat = inputFormat;\n\n    this.utfType = inputOptions[\"encoding\"] || \"UTF8\";\n    this.numRounds = inputOptions[\"numRounds\"] || 1;\n\n    /* eslint-disable-next-line @typescript-eslint/ban-ts-ignore */\n    // @ts-ignore - The spec actually says ToString is called on the first parseInt argument so it's OK to use it here\n    // to check if an arugment is an integer. This cheat would break if it's used to get the value of the argument.\n    if (isNaN(this.numRounds) || this.numRounds !== parseInt(this.numRounds, 10) || 1 > this.numRounds) {\n      throw new Error(\"numRounds must a integer >= 1\");\n    }\n\n    this.shaVariant = variant;\n    this.remainder = [];\n    this.remainderLen = 0;\n    this.updateCalled = false;\n    this.processedLen = 0;\n    this.macKeySet = false;\n    this.keyWithIPad = [];\n    this.keyWithOPad = [];\n  }\n\n  /**\n   * Hashes as many blocks as possible.  Stores the rest for either a future update or getHash call.\n   *\n   * @param srcString The input to be hashed.\n   */\n  update(srcString: string | ArrayBuffer | Uint8Array): void {\n    let i,\n      updateProcessedLen = 0;\n    const variantBlockIntInc = this.variantBlockSize >>> 5,\n      convertRet = this.converterFunc(srcString, this.remainder, this.remainderLen),\n      chunkBinLen = convertRet[\"binLen\"],\n      chunk = convertRet[\"value\"],\n      chunkIntLen = chunkBinLen >>> 5;\n\n    for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {\n      if (updateProcessedLen + this.variantBlockSize <= chunkBinLen) {\n        this.intermediateState = this.roundFunc(chunk.slice(i, i + variantBlockIntInc), this.intermediateState);\n        updateProcessedLen += this.variantBlockSize;\n      }\n    }\n    this.processedLen += updateProcessedLen;\n    this.remainder = chunk.slice(updateProcessedLen >>> 5);\n    this.remainderLen = chunkBinLen % this.variantBlockSize;\n    this.updateCalled = true;\n  }\n\n  /**\n   * Returns the desired SHA hash of the input fed in via `update` calls.\n   *\n   * @param format The desired output formatting\n   * @param options Hashmap of output formatting options. `outputLen` must be specified for variable length hashes.\n   *   `outputLen` replaces the now deprecated `shakeLen` key.\n   * @returns The hash in the format specified.\n   */\n  getHash(format: \"HEX\", options?: { outputUpper?: boolean; outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"B64\", options?: { b64Pad?: string; outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"BYTES\", options?: { outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"UINT8ARRAY\", options?: { outputLen?: number; shakeLen?: number }): Uint8Array;\n  getHash(format: \"ARRAYBUFFER\", options?: { outputLen?: number; shakeLen?: number }): ArrayBuffer;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getHash(format: any, options?: any): any {\n    let i,\n      finalizedState,\n      outputBinLen = this.outputBinLen;\n\n    const outputOptions = getOutputOpts(options);\n\n    if (this.isVariableLen) {\n      if (outputOptions[\"outputLen\"] === -1) {\n        throw new Error(\"Output length must be specified in options\");\n      }\n      outputBinLen = outputOptions[\"outputLen\"];\n    }\n\n    const formatFunc = getOutputConverter(format, outputBinLen, this.bigEndianMod, outputOptions);\n    if (this.macKeySet && this.getMAC) {\n      return formatFunc(this.getMAC(outputOptions));\n    }\n\n    finalizedState = this.finalizeFunc(\n      this.remainder.slice(),\n      this.remainderLen,\n      this.processedLen,\n      this.stateCloneFunc(this.intermediateState),\n      outputBinLen\n    );\n    for (i = 1; i < this.numRounds; i += 1) {\n      /* Need to mask out bits that should be zero due to output not being a multiple of 32 */\n      if (this.isVariableLen && outputBinLen % 32 !== 0) {\n        finalizedState[finalizedState.length - 1] &= 0x00ffffff >>> (24 - (outputBinLen % 32));\n      }\n      finalizedState = this.finalizeFunc(\n        finalizedState,\n        outputBinLen,\n        0,\n        this.newStateFunc(this.shaVariant),\n        outputBinLen\n      );\n    }\n\n    return formatFunc(finalizedState);\n  }\n\n  /**\n   * Sets the HMAC key for an eventual `getHMAC` call.  Must be called immediately after jsSHA object instantiation.\n   *\n   * @param key The key used to calculate the HMAC\n   * @param inputFormat The format of key.\n   * @param options Hashmap of extra input options.\n   */\n  setHMACKey(key: string, inputFormat: \"TEXT\", options?: { encoding?: EncodingType }): void;\n  setHMACKey(key: string, inputFormat: \"B64\" | \"HEX\" | \"BYTES\"): void;\n  setHMACKey(key: ArrayBuffer, inputFormat: \"ARRAYBUFFER\"): void;\n  setHMACKey(key: Uint8Array, inputFormat: \"UINT8ARRAY\"): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  setHMACKey(key: any, inputFormat: any, options?: any): void {\n    if (!this.HMACSupported) {\n      throw new Error(\"Variant does not support HMAC\");\n    }\n\n    if (this.updateCalled) {\n      throw new Error(\"Cannot set MAC key after calling update\");\n    }\n\n    const keyOptions = options || {},\n      keyConverterFunc = getStrConverter(inputFormat, keyOptions[\"encoding\"] || \"UTF8\", this.bigEndianMod);\n\n    this._setHMACKey(keyConverterFunc(key));\n  }\n\n  /**\n   * Internal function that sets the MAC key.\n   *\n   * @param key The packed MAC key to use\n   */\n  protected _setHMACKey(key: packedValue): void {\n    const blockByteSize = this.variantBlockSize >>> 3,\n      lastArrayIndex = blockByteSize / 4 - 1;\n    let i;\n    if (this.numRounds !== 1) {\n      throw new Error(mac_rounds_error);\n    }\n\n    if (this.macKeySet) {\n      throw new Error(\"MAC key already set\");\n    }\n\n    /* Figure out what to do with the key based on its size relative to\n     * the hash's block size */\n    if (blockByteSize < key[\"binLen\"] / 8) {\n      key[\"value\"] = this.finalizeFunc(\n        key[\"value\"],\n        key[\"binLen\"],\n        0,\n        this.newStateFunc(this.shaVariant),\n        this.outputBinLen\n      );\n    }\n    while (key[\"value\"].length <= lastArrayIndex) {\n      key[\"value\"].push(0);\n    }\n    /* Create ipad and opad */\n    for (i = 0; i <= lastArrayIndex; i += 1) {\n      this.keyWithIPad[i] = key[\"value\"][i] ^ 0x36363636;\n      this.keyWithOPad[i] = key[\"value\"][i] ^ 0x5c5c5c5c;\n    }\n\n    this.intermediateState = this.roundFunc(this.keyWithIPad, this.intermediateState);\n    this.processedLen = this.variantBlockSize;\n\n    this.macKeySet = true;\n  }\n\n  /**\n   * Returns the the HMAC in the specified format using the key given by a previous `setHMACKey` call.\n   *\n   * @param format The desired output formatting.\n   * @param options Hashmap of extra outputs options.\n   * @returns The HMAC in the format specified.\n   */\n  getHMAC(format: \"HEX\", options?: { outputUpper?: boolean }): string;\n  getHMAC(format: \"B64\", options?: { b64Pad?: string }): string;\n  getHMAC(format: \"BYTES\"): string;\n  getHMAC(format: \"UINT8ARRAY\"): Uint8Array;\n  getHMAC(format: \"ARRAYBUFFER\"): ArrayBuffer;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getHMAC(format: any, options?: any): any {\n    const outputOptions = getOutputOpts(options),\n      formatFunc = getOutputConverter(format, this.outputBinLen, this.bigEndianMod, outputOptions);\n\n    return formatFunc(this._getHMAC());\n  }\n\n  /**\n   * Internal function that returns the \"raw\" HMAC\n   */\n  protected _getHMAC(): number[] {\n    let finalizedState;\n\n    if (!this.macKeySet) {\n      throw new Error(\"Cannot call getHMAC without first setting MAC key\");\n    }\n\n    const firstHash = this.finalizeFunc(\n      this.remainder.slice(),\n      this.remainderLen,\n      this.processedLen,\n      this.stateCloneFunc(this.intermediateState),\n      this.outputBinLen\n    );\n    finalizedState = this.roundFunc(this.keyWithOPad, this.newStateFunc(this.shaVariant));\n    finalizedState = this.finalizeFunc(\n      firstHash,\n      this.outputBinLen,\n      this.variantBlockSize,\n      finalizedState,\n      this.outputBinLen\n    );\n\n    return finalizedState;\n  }\n}\n","/*\n * Note 1: All the functions in this file guarantee only that the bottom 32-bits of the return value are correct.\n * JavaScript is flakey when it comes to bit operations and a '1' in the highest order bit of a 32-bit number causes\n * it to be interpreted as a negative number per two's complement.\n *\n * Note 2: Per the ECMAScript spec, all JavaScript operations mask the shift amount by 0x1F.  This results in weird\n * cases like 1 << 32 == 1 and 1 << 33 === 1 << 1 === 2\n */\n\n/**\n * The 32-bit implementation of circular rotate left.\n *\n * @param x The 32-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted left circularly by `n` bits\n */\nexport function rotl_32(x: number, n: number): number {\n  return (x << n) | (x >>> (32 - n));\n}\n\n/**\n * The 32-bit implementation of circular rotate right.\n *\n * @param x The 32-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted right circularly by `n` bits\n */\nfunction rotr_32(x: number, n: number): number {\n  return (x >>> n) | (x << (32 - n));\n}\n\n/**\n * The 32-bit implementation of shift right.\n *\n * @param x The 32-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted by `n` bits.\n */\nfunction shr_32(x: number, n: number): number {\n  return x >>> n;\n}\n\n/**\n * The 32-bit implementation of the NIST specified Parity function.\n *\n * @param x The first 32-bit integer argument.\n * @param y The second 32-bit integer argument.\n * @param z The third 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function parity_32(x: number, y: number, z: number): number {\n  return x ^ y ^ z;\n}\n\n/**\n * The 32-bit implementation of the NIST specified Ch function.\n *\n * @param x The first 32-bit integer argument.\n * @param y The second 32-bit integer argument.\n * @param z The third 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function ch_32(x: number, y: number, z: number): number {\n  return (x & y) ^ (~x & z);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Maj function.\n *\n * @param x The first 32-bit integer argument.\n * @param y The second 32-bit integer argument.\n * @param z The third 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function maj_32(x: number, y: number, z: number): number {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Sigma0 function.\n *\n * @param x The 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function sigma0_32(x: number): number {\n  return rotr_32(x, 2) ^ rotr_32(x, 13) ^ rotr_32(x, 22);\n}\n\n/**\n * Add two 32-bit integers.\n *\n * This uses 16-bit operations internally to work around sign problems due to JavaScript's lack of uint32 support.\n *\n * @param a The first 32-bit integer argument to be added.\n * @param b The second 32-bit integer argument to be added.\n * @returns The sum of `a` + `b`.\n */\nexport function safeAdd_32_2(a: number, b: number): number {\n  const lsw = (a & 0xffff) + (b & 0xffff),\n    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);\n\n  return ((msw & 0xffff) << 16) | (lsw & 0xffff);\n}\n\n/**\n * Add four 32-bit integers.\n *\n * This uses 16-bit operations internally to work around sign problems due to JavaScript's lack of uint32 support.\n *\n * @param a The first 32-bit integer argument to be added.\n * @param b The second 32-bit integer argument to be added.\n * @param c The third 32-bit integer argument to be added.\n * @param d The fourth 32-bit integer argument to be added.\n * @returns The sum of `a` + `b` + `c` + `d`.\n */\nexport function safeAdd_32_4(a: number, b: number, c: number, d: number): number {\n  const lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff),\n    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (lsw >>> 16);\n\n  return ((msw & 0xffff) << 16) | (lsw & 0xffff);\n}\n\n/**\n * Add five 32-bit integers.\n *\n * This uses 16-bit operations internally to work around sign problems due to JavaScript's lack of uint32 support.\n *\n * @param a The first 32-bit integer argument to be added.\n * @param b The second 32-bit integer argument to be added.\n * @param c The third 32-bit integer argument to be added.\n * @param d The fourth 32-bit integer argument to be added.\n * @param e The fifth 32-bit integer argument to be added.\n * @returns The sum of `a` + `b` + `c` + `d` + `e`.\n */\nexport function safeAdd_32_5(a: number, b: number, c: number, d: number, e: number): number {\n  const lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),\n    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);\n\n  return ((msw & 0xffff) << 16) | (lsw & 0xffff);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Gamma1 function.\n *\n * @param x The 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function gamma1_32(x: number): number {\n  return rotr_32(x, 17) ^ rotr_32(x, 19) ^ shr_32(x, 10);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Gamma0 function.\n *\n * @param x The 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function gamma0_32(x: number): number {\n  return rotr_32(x, 7) ^ rotr_32(x, 18) ^ shr_32(x, 3);\n}\n\n/**\n * The 32-bit implementation of the NIST specified Sigma1 function.\n *\n * @param x The 32-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function sigma1_32(x: number): number {\n  return rotr_32(x, 6) ^ rotr_32(x, 11) ^ rotr_32(x, 25);\n}\n","import { jsSHABase, TWO_PWR_32, sha_variant_error, parseInputOption } from \"./common\";\nimport {\n  packedValue,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n} from \"./custom_types\";\nimport { getStrConverter } from \"./converters\";\nimport { ch_32, parity_32, maj_32, rotl_32, safeAdd_32_2, safeAdd_32_5 } from \"./primitives_32\";\n\n/**\n * Gets the state values for the specified SHA variant.\n *\n * @param _variant: Unused\n * @returns The initial state values.\n */\nfunction getNewState(_variant: \"SHA-1\"): number[] {\n  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n}\n\n/**\n * Performs a round of SHA-1 hashing over a 512-byte block.  This clobbers `H`.\n *\n * @param block The binary array representation of the block to hash.\n * @param H The intermediate H values from a previous round.\n * @returns The resulting H values.\n */\nfunction roundSHA1(block: number[], H: number[]): number[] {\n  let a, b, c, d, e, T, t;\n  const W: number[] = [];\n\n  a = H[0];\n  b = H[1];\n  c = H[2];\n  d = H[3];\n  e = H[4];\n\n  for (t = 0; t < 80; t += 1) {\n    if (t < 16) {\n      W[t] = block[t];\n    } else {\n      W[t] = rotl_32(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    if (t < 20) {\n      T = safeAdd_32_5(rotl_32(a, 5), ch_32(b, c, d), e, 0x5a827999, W[t]);\n    } else if (t < 40) {\n      T = safeAdd_32_5(rotl_32(a, 5), parity_32(b, c, d), e, 0x6ed9eba1, W[t]);\n    } else if (t < 60) {\n      T = safeAdd_32_5(rotl_32(a, 5), maj_32(b, c, d), e, 0x8f1bbcdc, W[t]);\n    } else {\n      T = safeAdd_32_5(rotl_32(a, 5), parity_32(b, c, d), e, 0xca62c1d6, W[t]);\n    }\n\n    e = d;\n    d = c;\n    c = rotl_32(b, 30);\n    b = a;\n    a = T;\n  }\n\n  H[0] = safeAdd_32_2(a, H[0]);\n  H[1] = safeAdd_32_2(b, H[1]);\n  H[2] = safeAdd_32_2(c, H[2]);\n  H[3] = safeAdd_32_2(d, H[3]);\n  H[4] = safeAdd_32_2(e, H[4]);\n\n  return H;\n}\n\n/**\n * Finalizes the SHA-1 hash.  This clobbers `remainder` and `H`.\n *\n * @param remainder Any leftover unprocessed packed ints that still need to be processed.\n * @param remainderBinLen The number of bits in `remainder`.\n * @param processedBinLen The number of bits already processed.\n * @param H The intermediate H values from a previous round.\n * @returns The array of integers representing the SHA-1 hash of message.\n */\nfunction finalizeSHA1(remainder: number[], remainderBinLen: number, processedBinLen: number, H: number[]): number[] {\n  let i;\n\n  /* The 65 addition is a hack but it works.  The correct number is\n\t\tactually 72 (64 + 8) but the below math fails if\n\t\tremainderBinLen + 72 % 512 = 0. Since remainderBinLen % 8 = 0,\n\t\t\"shorting\" the addition is OK. */\n  const offset = (((remainderBinLen + 65) >>> 9) << 4) + 15,\n    totalLen = remainderBinLen + processedBinLen;\n  while (remainder.length <= offset) {\n    remainder.push(0);\n  }\n  /* Append '1' at the end of the binary string */\n  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));\n\n  /* Append length of binary string in the position such that the new\n   * length is a multiple of 512.  Logic does not work for even multiples\n   * of 512 but there can never be even multiples of 512. JavaScript\n   * numbers are limited to 2^53 so it's \"safe\" to treat the totalLen as\n   * a 64-bit integer. */\n  remainder[offset] = totalLen & 0xffffffff;\n\n  /* Bitwise operators treat the operand as a 32-bit number so need to\n   * use hacky division and round to get access to upper 32-ish bits */\n  remainder[offset - 1] = (totalLen / TWO_PWR_32) | 0;\n\n  /* This will always be at least 1 full chunk */\n  for (i = 0; i < remainder.length; i += 16) {\n    H = roundSHA1(remainder.slice(i, i + 16), H);\n  }\n\n  return H;\n}\n\nexport default class jsSHA extends jsSHABase<number[], \"SHA-1\"> {\n  intermediateState: number[];\n  variantBlockSize: number;\n  bigEndianMod: -1 | 1;\n  outputBinLen: number;\n  isVariableLen: boolean;\n  HMACSupported: boolean;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  roundFunc: (block: number[], H: number[]) => number[];\n  finalizeFunc: (remainder: number[], remainderBinLen: number, processedBinLen: number, H: number[]) => number[];\n  stateCloneFunc: (state: number[]) => number[];\n  newStateFunc: (variant: \"SHA-1\") => number[];\n  getMAC: () => number[];\n\n  constructor(variant: \"SHA-1\", inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(variant: \"SHA-1\", inputFormat: FormatNoTextType, options?: FixedLengthOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    if (\"SHA-1\" !== variant) {\n      throw new Error(sha_variant_error);\n    }\n    super(variant, inputFormat, options);\n    const resolvedOptions = options || {};\n\n    this.HMACSupported = true;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    this.getMAC = this._getHMAC;\n    this.bigEndianMod = -1;\n    this.converterFunc = getStrConverter(this.inputFormat, this.utfType, this.bigEndianMod);\n    this.roundFunc = roundSHA1;\n    this.stateCloneFunc = function (state: number[]): number[] {\n      return state.slice();\n    };\n    this.newStateFunc = getNewState;\n    this.finalizeFunc = finalizeSHA1;\n\n    this.intermediateState = getNewState(variant);\n    this.variantBlockSize = 512;\n    this.outputBinLen = 160;\n    this.isVariableLen = false;\n\n    if (resolvedOptions[\"hmacKey\"]) {\n      this._setHMACKey(parseInputOption(\"hmacKey\", resolvedOptions[\"hmacKey\"], this.bigEndianMod));\n    }\n  }\n}\n","import { jsSHABase, TWO_PWR_32, H_full, H_trunc, K_sha2, sha_variant_error, parseInputOption } from \"./common\";\nimport {\n  packedValue,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n} from \"./custom_types\";\nimport { getStrConverter } from \"./converters\";\nimport {\n  ch_32,\n  gamma0_32,\n  gamma1_32,\n  maj_32,\n  safeAdd_32_2,\n  safeAdd_32_4,\n  safeAdd_32_5,\n  sigma0_32,\n  sigma1_32,\n} from \"./primitives_32\";\n\ntype VariantType = \"SHA-224\" | \"SHA-256\";\n\n/**\n * Gets the state values for the specified SHA variant.\n *\n * @param variant: The SHA-256 family variant.\n * @returns The initial state values.\n */\nfunction getNewState256(variant: VariantType): number[] {\n  let retVal;\n\n  if (\"SHA-224\" == variant) {\n    retVal = H_trunc.slice();\n  } else {\n    /* \"SHA-256\" */\n    retVal = H_full.slice();\n  }\n  return retVal;\n}\n\n/**\n * Performs a round of SHA-256 hashing over a block. This clobbers `H`.\n *\n * @param block The binary array representation of the block to hash.\n * @param H The intermediate H values from a previous round.\n * @returns The resulting H values.\n */\nfunction roundSHA256(block: number[], H: number[]): number[] {\n  let a, b, c, d, e, f, g, h, T1, T2, t;\n\n  const W: number[] = [];\n\n  a = H[0];\n  b = H[1];\n  c = H[2];\n  d = H[3];\n  e = H[4];\n  f = H[5];\n  g = H[6];\n  h = H[7];\n\n  for (t = 0; t < 64; t += 1) {\n    if (t < 16) {\n      W[t] = block[t];\n    } else {\n      W[t] = safeAdd_32_4(gamma1_32(W[t - 2]), W[t - 7], gamma0_32(W[t - 15]), W[t - 16]);\n    }\n    T1 = safeAdd_32_5(h, sigma1_32(e), ch_32(e, f, g), K_sha2[t], W[t]);\n    T2 = safeAdd_32_2(sigma0_32(a), maj_32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = safeAdd_32_2(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = safeAdd_32_2(T1, T2);\n  }\n\n  H[0] = safeAdd_32_2(a, H[0]);\n  H[1] = safeAdd_32_2(b, H[1]);\n  H[2] = safeAdd_32_2(c, H[2]);\n  H[3] = safeAdd_32_2(d, H[3]);\n  H[4] = safeAdd_32_2(e, H[4]);\n  H[5] = safeAdd_32_2(f, H[5]);\n  H[6] = safeAdd_32_2(g, H[6]);\n  H[7] = safeAdd_32_2(h, H[7]);\n\n  return H;\n}\n\n/**\n * Finalizes the SHA-256 hash. This clobbers `remainder` and `H`.\n *\n * @param remainder Any leftover unprocessed packed ints that still need to be processed.\n * @param remainderBinLen The number of bits in `remainder`.\n * @param processedBinLen The number of bits already processed.\n * @param H The intermediate H values from a previous round.\n * @param variant The desired SHA-256 variant.\n * @returns The array of integers representing the SHA-2 hash of message.\n */\nfunction finalizeSHA256(\n  remainder: number[],\n  remainderBinLen: number,\n  processedBinLen: number,\n  H: number[],\n  variant: VariantType\n): number[] {\n  let i, retVal;\n\n  /* The 65 addition is a hack but it works.  The correct number is\n    actually 72 (64 + 8) but the below math fails if\n    remainderBinLen + 72 % 512 = 0. Since remainderBinLen % 8 = 0,\n    \"shorting\" the addition is OK. */\n  const offset = (((remainderBinLen + 65) >>> 9) << 4) + 15,\n    binaryStringInc = 16,\n    totalLen = remainderBinLen + processedBinLen;\n\n  while (remainder.length <= offset) {\n    remainder.push(0);\n  }\n  /* Append '1' at the end of the binary string */\n  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));\n  /* Append length of binary string in the position such that the new\n   * length is correct. JavaScript numbers are limited to 2^53 so it's\n   * \"safe\" to treat the totalLen as a 64-bit integer. */\n\n  remainder[offset] = totalLen & 0xffffffff;\n  /* Bitwise operators treat the operand as a 32-bit number so need to\n   * use hacky division and round to get access to upper 32-ish bits */\n  remainder[offset - 1] = (totalLen / TWO_PWR_32) | 0;\n\n  /* This will always be at least 1 full chunk */\n  for (i = 0; i < remainder.length; i += binaryStringInc) {\n    H = roundSHA256(remainder.slice(i, i + binaryStringInc), H);\n  }\n\n  if (\"SHA-224\" === variant) {\n    retVal = [H[0], H[1], H[2], H[3], H[4], H[5], H[6]];\n  } else {\n    /* \"SHA-256 */\n    retVal = H;\n  }\n\n  return retVal;\n}\nexport default class jsSHA extends jsSHABase<number[], VariantType> {\n  intermediateState: number[];\n  variantBlockSize: number;\n  bigEndianMod: -1 | 1;\n  outputBinLen: number;\n  isVariableLen: boolean;\n  HMACSupported: boolean;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  roundFunc: (block: number[], H: number[]) => number[];\n  finalizeFunc: (remainder: number[], remainderBinLen: number, processedBinLen: number, H: number[]) => number[];\n  stateCloneFunc: (state: number[]) => number[];\n  newStateFunc: (variant: VariantType) => number[];\n  getMAC: () => number[];\n\n  constructor(variant: VariantType, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(variant: VariantType, inputFormat: FormatNoTextType, options?: FixedLengthOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    if (!(\"SHA-224\" === variant || \"SHA-256\" === variant)) {\n      throw new Error(sha_variant_error);\n    }\n    super(variant, inputFormat, options);\n    const resolvedOptions = options || {};\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    this.getMAC = this._getHMAC;\n    this.HMACSupported = true;\n    this.bigEndianMod = -1;\n    this.converterFunc = getStrConverter(this.inputFormat, this.utfType, this.bigEndianMod);\n    this.roundFunc = roundSHA256;\n    this.stateCloneFunc = function (state): number[] {\n      return state.slice();\n    };\n\n    this.newStateFunc = getNewState256;\n    this.finalizeFunc = function (remainder, remainderBinLen, processedBinLen, H): number[] {\n      return finalizeSHA256(remainder, remainderBinLen, processedBinLen, H, variant);\n    };\n\n    this.intermediateState = getNewState256(variant);\n    this.variantBlockSize = 512;\n    this.outputBinLen = \"SHA-224\" === variant ? 224 : 256;\n    this.isVariableLen = false;\n\n    if (resolvedOptions[\"hmacKey\"]) {\n      this._setHMACKey(parseInputOption(\"hmacKey\", resolvedOptions[\"hmacKey\"], this.bigEndianMod));\n    }\n  }\n}\n","/*\n * Note 1: All the functions in this file guarantee only that the bottom 32-bits of the returned Int_64 are correct.\n * JavaScript is flakey when it comes to bit operations and a '1' in the highest order bit of a 32-bit number causes\n * it to be interpreted as a negative number per two's complement.\n *\n * Note 2: Per the ECMAScript spec, all JavaScript operations mask the shift amount by 0x1F.  This results in weird\n * cases like 1 << 32 == 1 and 1 << 33 === 1 << 1 === 2\n */\n\n/**\n * Int_64 is a object for 2 32-bit numbers emulating a 64-bit number.\n */\nexport class Int_64 {\n  /**\n   * @param msint_32 The most significant 32-bits of a 64-bit number.\n   * @param lsint_32 The least significant 32-bits of a 64-bit number.\n   */\n  readonly highOrder: number;\n  readonly lowOrder: number;\n  constructor(msint_32: number, lsint_32: number) {\n    this.highOrder = msint_32;\n    this.lowOrder = lsint_32;\n  }\n}\n\n/**\n * The 64-bit implementation of circular rotate left.\n *\n * This does not work for n >= 64 or n == 32 but those are never done.\n *\n * @param x The 64-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted left circularly by `n` bits.\n */\nexport function rotl_64(x: Int_64, n: number): Int_64 {\n  let tmp;\n  if (n > 32) {\n    tmp = 64 - n;\n    return new Int_64((x.lowOrder << n) | (x.highOrder >>> tmp), (x.highOrder << n) | (x.lowOrder >>> tmp));\n  } else if (0 !== n) {\n    tmp = 32 - n;\n    return new Int_64((x.highOrder << n) | (x.lowOrder >>> tmp), (x.lowOrder << n) | (x.highOrder >>> tmp));\n  } else {\n    return x;\n  }\n}\n\n/**\n * The 64-bit implementation of circular rotate right.\n *\n * This does not work for n >= 64, n == 32, or n == 0 but those are never done.\n *\n * @param x The 64-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted right circularly by `n` bits.\n */\nfunction rotr_64(x: Int_64, n: number): Int_64 {\n  let tmp;\n  if (n < 32) {\n    tmp = 32 - n;\n    return new Int_64((x.highOrder >>> n) | (x.lowOrder << tmp), (x.lowOrder >>> n) | (x.highOrder << tmp));\n  } else {\n    tmp = 64 - n;\n    return new Int_64((x.lowOrder >>> n) | (x.highOrder << tmp), (x.highOrder >>> n) | (x.lowOrder << tmp));\n  }\n}\n\n/**\n * The 64-bit implementation of shift right.\n *\n * This does not work for n >= 32 but is only called for n < 32.\n *\n * @param x The 64-bit integer argument.\n * @param n The number of bits to shift.\n * @returns `x` shifted right by `n` bits\n */\nfunction shr_64(x: Int_64, n: number): Int_64 {\n  return new Int_64(x.highOrder >>> n, (x.lowOrder >>> n) | (x.highOrder << (32 - n)));\n}\n\n/**\n * The 64-bit implementation of the NIST specified Ch function.\n *\n * @param x The first 64-bit integer argument.\n * @param y The second 64-bit integer argument.\n * @param z The third 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function ch_64(x: Int_64, y: Int_64, z: Int_64): Int_64 {\n  return new Int_64(\n    (x.highOrder & y.highOrder) ^ (~x.highOrder & z.highOrder),\n    (x.lowOrder & y.lowOrder) ^ (~x.lowOrder & z.lowOrder)\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Maj function.\n *\n * @param x The first 64-bit integer argument.\n * @param y The second 64-bit integer argument.\n * @param z The third 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function maj_64(x: Int_64, y: Int_64, z: Int_64): Int_64 {\n  return new Int_64(\n    (x.highOrder & y.highOrder) ^ (x.highOrder & z.highOrder) ^ (y.highOrder & z.highOrder),\n    (x.lowOrder & y.lowOrder) ^ (x.lowOrder & z.lowOrder) ^ (y.lowOrder & z.lowOrder)\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Sigma0 function.\n *\n * @param x The 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function sigma0_64(x: Int_64): Int_64 {\n  const rotr28 = rotr_64(x, 28),\n    rotr34 = rotr_64(x, 34),\n    rotr39 = rotr_64(x, 39);\n\n  return new Int_64(\n    rotr28.highOrder ^ rotr34.highOrder ^ rotr39.highOrder,\n    rotr28.lowOrder ^ rotr34.lowOrder ^ rotr39.lowOrder\n  );\n}\n\n/**\n * Add two 64-bit integers.\n *\n * @param x The first 64-bit integer argument to be added.\n * @param y The second 64-bit integer argument to be added.\n * @returns The sum of `x` + `y`.\n */\nexport function safeAdd_64_2(x: Int_64, y: Int_64): Int_64 {\n  let lsw, msw;\n\n  lsw = (x.lowOrder & 0xffff) + (y.lowOrder & 0xffff);\n  msw = (x.lowOrder >>> 16) + (y.lowOrder >>> 16) + (lsw >>> 16);\n  const lowOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  lsw = (x.highOrder & 0xffff) + (y.highOrder & 0xffff) + (msw >>> 16);\n  msw = (x.highOrder >>> 16) + (y.highOrder >>> 16) + (lsw >>> 16);\n  const highOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  return new Int_64(highOrder, lowOrder);\n}\n\n/**\n * Add four 64-bit integers.\n *\n * @param a The first 64-bit integer argument to be added.\n * @param b The second 64-bit integer argument to be added.\n * @param c The third 64-bit integer argument to be added.\n * @param d The fouth 64-bit integer argument to be added.\n * @returns The sum of `a` + `b` + `c` + `d`.\n */\nexport function safeAdd_64_4(a: Int_64, b: Int_64, c: Int_64, d: Int_64): Int_64 {\n  let lsw, msw;\n\n  lsw = (a.lowOrder & 0xffff) + (b.lowOrder & 0xffff) + (c.lowOrder & 0xffff) + (d.lowOrder & 0xffff);\n  msw = (a.lowOrder >>> 16) + (b.lowOrder >>> 16) + (c.lowOrder >>> 16) + (d.lowOrder >>> 16) + (lsw >>> 16);\n  const lowOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  lsw =\n    (a.highOrder & 0xffff) + (b.highOrder & 0xffff) + (c.highOrder & 0xffff) + (d.highOrder & 0xffff) + (msw >>> 16);\n  msw = (a.highOrder >>> 16) + (b.highOrder >>> 16) + (c.highOrder >>> 16) + (d.highOrder >>> 16) + (lsw >>> 16);\n  const highOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  return new Int_64(highOrder, lowOrder);\n}\n\n/**\n * Add five 64-bit integers.\n *\n * @param a The first 64-bit integer argument to be added.\n * @param b The second 64-bit integer argument to be added.\n * @param c The third 64-bit integer argument to be added.\n * @param d The fouth 64-bit integer argument to be added.\n * @param e The fifth 64-bit integer argument to be added.\n * @returns The sum of `a` + `b` + `c` + `d` + `e`.\n */\nexport function safeAdd_64_5(a: Int_64, b: Int_64, c: Int_64, d: Int_64, e: Int_64): Int_64 {\n  let lsw, msw;\n\n  lsw =\n    (a.lowOrder & 0xffff) +\n    (b.lowOrder & 0xffff) +\n    (c.lowOrder & 0xffff) +\n    (d.lowOrder & 0xffff) +\n    (e.lowOrder & 0xffff);\n  msw =\n    (a.lowOrder >>> 16) +\n    (b.lowOrder >>> 16) +\n    (c.lowOrder >>> 16) +\n    (d.lowOrder >>> 16) +\n    (e.lowOrder >>> 16) +\n    (lsw >>> 16);\n  const lowOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  lsw =\n    (a.highOrder & 0xffff) +\n    (b.highOrder & 0xffff) +\n    (c.highOrder & 0xffff) +\n    (d.highOrder & 0xffff) +\n    (e.highOrder & 0xffff) +\n    (msw >>> 16);\n  msw =\n    (a.highOrder >>> 16) +\n    (b.highOrder >>> 16) +\n    (c.highOrder >>> 16) +\n    (d.highOrder >>> 16) +\n    (e.highOrder >>> 16) +\n    (lsw >>> 16);\n  const highOrder = ((msw & 0xffff) << 16) | (lsw & 0xffff);\n\n  return new Int_64(highOrder, lowOrder);\n}\n\n/**\n * XORs two given arguments.\n *\n * @param a The first argument to be XORed.\n * @param b The second argument to be XORed.\n * @returns The The XOR `a` and `b`\n */\nexport function xor_64_2(a: Int_64, b: Int_64): Int_64 {\n  return new Int_64(a.highOrder ^ b.highOrder, a.lowOrder ^ b.lowOrder);\n}\n\n/**\n * XORs five given arguments.\n *\n * @param a The first argument to be XORed.\n * @param b The second argument to be XORed.\n * @param c The third argument to be XORed.\n * @param d The fourth argument to be XORed.\n * @param e The fifth argument to be XORed.\n * @returns The XOR of `a`, `b`, `c`, `d`, and `e`.\n */\nexport function xor_64_5(a: Int_64, b: Int_64, c: Int_64, d: Int_64, e: Int_64): Int_64 {\n  return new Int_64(\n    a.highOrder ^ b.highOrder ^ c.highOrder ^ d.highOrder ^ e.highOrder,\n    a.lowOrder ^ b.lowOrder ^ c.lowOrder ^ d.lowOrder ^ e.lowOrder\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Gamma1 function.\n *\n * @param x The 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function gamma1_64(x: Int_64): Int_64 {\n  const rotr19 = rotr_64(x, 19),\n    rotr61 = rotr_64(x, 61),\n    shr6 = shr_64(x, 6);\n\n  return new Int_64(\n    rotr19.highOrder ^ rotr61.highOrder ^ shr6.highOrder,\n    rotr19.lowOrder ^ rotr61.lowOrder ^ shr6.lowOrder\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Gamma0 function.\n *\n * @param x The 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function gamma0_64(x: Int_64): Int_64 {\n  const rotr1 = rotr_64(x, 1),\n    rotr8 = rotr_64(x, 8),\n    shr7 = shr_64(x, 7);\n\n  return new Int_64(\n    rotr1.highOrder ^ rotr8.highOrder ^ shr7.highOrder,\n    rotr1.lowOrder ^ rotr8.lowOrder ^ shr7.lowOrder\n  );\n}\n\n/**\n * The 64-bit implementation of the NIST specified Sigma1 function.\n *\n * @param x The 64-bit integer argument.\n * @returns The NIST specified output of the function.\n */\nexport function sigma1_64(x: Int_64): Int_64 {\n  const rotr14 = rotr_64(x, 14),\n    rotr18 = rotr_64(x, 18),\n    rotr41 = rotr_64(x, 41);\n\n  return new Int_64(\n    rotr14.highOrder ^ rotr18.highOrder ^ rotr41.highOrder,\n    rotr14.lowOrder ^ rotr18.lowOrder ^ rotr41.lowOrder\n  );\n}\n","import { jsSHABase, TWO_PWR_32, H_trunc, H_full, K_sha2, sha_variant_error, parseInputOption } from \"./common\";\nimport {\n  packedValue,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n} from \"./custom_types\";\nimport { getStrConverter } from \"./converters\";\nimport {\n  ch_64,\n  gamma0_64,\n  gamma1_64,\n  Int_64,\n  maj_64,\n  safeAdd_64_2,\n  safeAdd_64_4,\n  safeAdd_64_5,\n  sigma0_64,\n  sigma1_64,\n} from \"./primitives_64\";\n\ntype VariantType = \"SHA-384\" | \"SHA-512\";\n\nconst K_sha512 = [\n  new Int_64(K_sha2[0], 0xd728ae22),\n  new Int_64(K_sha2[1], 0x23ef65cd),\n  new Int_64(K_sha2[2], 0xec4d3b2f),\n  new Int_64(K_sha2[3], 0x8189dbbc),\n  new Int_64(K_sha2[4], 0xf348b538),\n  new Int_64(K_sha2[5], 0xb605d019),\n  new Int_64(K_sha2[6], 0xaf194f9b),\n  new Int_64(K_sha2[7], 0xda6d8118),\n  new Int_64(K_sha2[8], 0xa3030242),\n  new Int_64(K_sha2[9], 0x45706fbe),\n  new Int_64(K_sha2[10], 0x4ee4b28c),\n  new Int_64(K_sha2[11], 0xd5ffb4e2),\n  new Int_64(K_sha2[12], 0xf27b896f),\n  new Int_64(K_sha2[13], 0x3b1696b1),\n  new Int_64(K_sha2[14], 0x25c71235),\n  new Int_64(K_sha2[15], 0xcf692694),\n  new Int_64(K_sha2[16], 0x9ef14ad2),\n  new Int_64(K_sha2[17], 0x384f25e3),\n  new Int_64(K_sha2[18], 0x8b8cd5b5),\n  new Int_64(K_sha2[19], 0x77ac9c65),\n  new Int_64(K_sha2[20], 0x592b0275),\n  new Int_64(K_sha2[21], 0x6ea6e483),\n  new Int_64(K_sha2[22], 0xbd41fbd4),\n  new Int_64(K_sha2[23], 0x831153b5),\n  new Int_64(K_sha2[24], 0xee66dfab),\n  new Int_64(K_sha2[25], 0x2db43210),\n  new Int_64(K_sha2[26], 0x98fb213f),\n  new Int_64(K_sha2[27], 0xbeef0ee4),\n  new Int_64(K_sha2[28], 0x3da88fc2),\n  new Int_64(K_sha2[29], 0x930aa725),\n  new Int_64(K_sha2[30], 0xe003826f),\n  new Int_64(K_sha2[31], 0x0a0e6e70),\n  new Int_64(K_sha2[32], 0x46d22ffc),\n  new Int_64(K_sha2[33], 0x5c26c926),\n  new Int_64(K_sha2[34], 0x5ac42aed),\n  new Int_64(K_sha2[35], 0x9d95b3df),\n  new Int_64(K_sha2[36], 0x8baf63de),\n  new Int_64(K_sha2[37], 0x3c77b2a8),\n  new Int_64(K_sha2[38], 0x47edaee6),\n  new Int_64(K_sha2[39], 0x1482353b),\n  new Int_64(K_sha2[40], 0x4cf10364),\n  new Int_64(K_sha2[41], 0xbc423001),\n  new Int_64(K_sha2[42], 0xd0f89791),\n  new Int_64(K_sha2[43], 0x0654be30),\n  new Int_64(K_sha2[44], 0xd6ef5218),\n  new Int_64(K_sha2[45], 0x5565a910),\n  new Int_64(K_sha2[46], 0x5771202a),\n  new Int_64(K_sha2[47], 0x32bbd1b8),\n  new Int_64(K_sha2[48], 0xb8d2d0c8),\n  new Int_64(K_sha2[49], 0x5141ab53),\n  new Int_64(K_sha2[50], 0xdf8eeb99),\n  new Int_64(K_sha2[51], 0xe19b48a8),\n  new Int_64(K_sha2[52], 0xc5c95a63),\n  new Int_64(K_sha2[53], 0xe3418acb),\n  new Int_64(K_sha2[54], 0x7763e373),\n  new Int_64(K_sha2[55], 0xd6b2b8a3),\n  new Int_64(K_sha2[56], 0x5defb2fc),\n  new Int_64(K_sha2[57], 0x43172f60),\n  new Int_64(K_sha2[58], 0xa1f0ab72),\n  new Int_64(K_sha2[59], 0x1a6439ec),\n  new Int_64(K_sha2[60], 0x23631e28),\n  new Int_64(K_sha2[61], 0xde82bde9),\n  new Int_64(K_sha2[62], 0xb2c67915),\n  new Int_64(K_sha2[63], 0xe372532b),\n  new Int_64(0xca273ece, 0xea26619c),\n  new Int_64(0xd186b8c7, 0x21c0c207),\n  new Int_64(0xeada7dd6, 0xcde0eb1e),\n  new Int_64(0xf57d4f7f, 0xee6ed178),\n  new Int_64(0x06f067aa, 0x72176fba),\n  new Int_64(0x0a637dc5, 0xa2c898a6),\n  new Int_64(0x113f9804, 0xbef90dae),\n  new Int_64(0x1b710b35, 0x131c471b),\n  new Int_64(0x28db77f5, 0x23047d84),\n  new Int_64(0x32caab7b, 0x40c72493),\n  new Int_64(0x3c9ebe0a, 0x15c9bebc),\n  new Int_64(0x431d67c4, 0x9c100d4c),\n  new Int_64(0x4cc5d4be, 0xcb3e42b6),\n  new Int_64(0x597f299c, 0xfc657e2a),\n  new Int_64(0x5fcb6fab, 0x3ad6faec),\n  new Int_64(0x6c44198c, 0x4a475817),\n];\n\n/**\n * Gets the state values for the specified SHA variant.\n *\n * @param variant: The SHA-512 family variant.\n * @returns The initial state values.\n */\nfunction getNewState512(variant: VariantType): Int_64[] {\n  if (\"SHA-384\" === variant) {\n    return [\n      new Int_64(0xcbbb9d5d, H_trunc[0]),\n      new Int_64(0x0629a292a, H_trunc[1]),\n      new Int_64(0x9159015a, H_trunc[2]),\n      new Int_64(0x0152fecd8, H_trunc[3]),\n      new Int_64(0x67332667, H_trunc[4]),\n      new Int_64(0x98eb44a87, H_trunc[5]),\n      new Int_64(0xdb0c2e0d, H_trunc[6]),\n      new Int_64(0x047b5481d, H_trunc[7]),\n    ];\n  } else {\n    /* SHA-512 */\n    return [\n      new Int_64(H_full[0], 0xf3bcc908),\n      new Int_64(H_full[1], 0x84caa73b),\n      new Int_64(H_full[2], 0xfe94f82b),\n      new Int_64(H_full[3], 0x5f1d36f1),\n      new Int_64(H_full[4], 0xade682d1),\n      new Int_64(H_full[5], 0x2b3e6c1f),\n      new Int_64(H_full[6], 0xfb41bd6b),\n      new Int_64(H_full[7], 0x137e2179),\n    ];\n  }\n}\n\n/**\n * Performs a round of SHA-512 hashing over a block. This clobbers `H`.\n *\n * @param block The binary array representation of the block to hash.\n * @param H The intermediate H values from a previous round.\n * @returns The resulting H values.\n */\nfunction roundSHA512(block: number[], H: Int_64[]): Int_64[] {\n  let a, b, c, d, e, f, g, h, T1, T2, t, offset;\n\n  const W: Int_64[] = [];\n\n  a = H[0];\n  b = H[1];\n  c = H[2];\n  d = H[3];\n  e = H[4];\n  f = H[5];\n  g = H[6];\n  h = H[7];\n\n  for (t = 0; t < 80; t += 1) {\n    if (t < 16) {\n      offset = t * 2;\n      W[t] = new Int_64(block[offset], block[offset + 1]);\n    } else {\n      W[t] = safeAdd_64_4(gamma1_64(W[t - 2]), W[t - 7], gamma0_64(W[t - 15]), W[t - 16]);\n    }\n    T1 = safeAdd_64_5(h, sigma1_64(e), ch_64(e, f, g), K_sha512[t], W[t]);\n    T2 = safeAdd_64_2(sigma0_64(a), maj_64(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = safeAdd_64_2(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = safeAdd_64_2(T1, T2);\n  }\n\n  H[0] = safeAdd_64_2(a, H[0]);\n  H[1] = safeAdd_64_2(b, H[1]);\n  H[2] = safeAdd_64_2(c, H[2]);\n  H[3] = safeAdd_64_2(d, H[3]);\n  H[4] = safeAdd_64_2(e, H[4]);\n  H[5] = safeAdd_64_2(f, H[5]);\n  H[6] = safeAdd_64_2(g, H[6]);\n  H[7] = safeAdd_64_2(h, H[7]);\n\n  return H;\n}\n\n/**\n * Finalizes the SHA-512 hash. This clobbers `remainder` and `H`.\n *\n * @param remainder Any leftover unprocessed packed ints that still need to be processed.\n * @param remainderBinLen The number of bits in `remainder`.\n * @param processedBinLen The number of bits already processed.\n * @param H The intermediate H values from a previous round.\n * @param variant The desired SHA-512 variant.\n * @returns The array of integers representing the SHA-512 hash of message.\n */\nfunction finalizeSHA512(\n  remainder: number[],\n  remainderBinLen: number,\n  processedBinLen: number,\n  H: Int_64[],\n  variant: VariantType\n): number[] {\n  let i, retVal;\n\n  /* The 129 addition is a hack but it works.  The correct number is\n    actually 136 (128 + 8) but the below math fails if\n    remainderBinLen + 136 % 1024 = 0. Since remainderBinLen % 8 = 0,\n    \"shorting\" the addition is OK. */\n  const offset = (((remainderBinLen + 129) >>> 10) << 5) + 31,\n    binaryStringInc = 32,\n    totalLen = remainderBinLen + processedBinLen;\n\n  while (remainder.length <= offset) {\n    remainder.push(0);\n  }\n  /* Append '1' at the end of the binary string */\n  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));\n  /* Append length of binary string in the position such that the new\n   * length is correct. JavaScript numbers are limited to 2^53 so it's\n   * \"safe\" to treat the totalLen as a 64-bit integer. */\n\n  remainder[offset] = totalLen & 0xffffffff;\n  /* Bitwise operators treat the operand as a 32-bit number so need to\n   * use hacky division and round to get access to upper 32-ish bits */\n  remainder[offset - 1] = (totalLen / TWO_PWR_32) | 0;\n\n  /* This will always be at least 1 full chunk */\n  for (i = 0; i < remainder.length; i += binaryStringInc) {\n    H = roundSHA512(remainder.slice(i, i + binaryStringInc), H);\n  }\n\n  if (\"SHA-384\" === variant) {\n    H = (H as unknown) as Int_64[];\n    retVal = [\n      H[0].highOrder,\n      H[0].lowOrder,\n      H[1].highOrder,\n      H[1].lowOrder,\n      H[2].highOrder,\n      H[2].lowOrder,\n      H[3].highOrder,\n      H[3].lowOrder,\n      H[4].highOrder,\n      H[4].lowOrder,\n      H[5].highOrder,\n      H[5].lowOrder,\n    ];\n  } else {\n    /* SHA-512 */\n    retVal = [\n      H[0].highOrder,\n      H[0].lowOrder,\n      H[1].highOrder,\n      H[1].lowOrder,\n      H[2].highOrder,\n      H[2].lowOrder,\n      H[3].highOrder,\n      H[3].lowOrder,\n      H[4].highOrder,\n      H[4].lowOrder,\n      H[5].highOrder,\n      H[5].lowOrder,\n      H[6].highOrder,\n      H[6].lowOrder,\n      H[7].highOrder,\n      H[7].lowOrder,\n    ];\n  }\n  return retVal;\n}\n\nexport default class jsSHA extends jsSHABase<Int_64[], VariantType> {\n  intermediateState: Int_64[];\n  variantBlockSize: number;\n  bigEndianMod: -1 | 1;\n  outputBinLen: number;\n  isVariableLen: boolean;\n  HMACSupported: boolean;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  roundFunc: (block: number[], H: Int_64[]) => Int_64[];\n  finalizeFunc: (remainder: number[], remainderBinLen: number, processedBinLen: number, H: Int_64[]) => number[];\n  stateCloneFunc: (state: Int_64[]) => Int_64[];\n  newStateFunc: (variant: VariantType) => Int_64[];\n  getMAC: () => number[];\n\n  constructor(variant: VariantType, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(variant: VariantType, inputFormat: FormatNoTextType, options?: FixedLengthOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    if (!(\"SHA-384\" === variant || \"SHA-512\" === variant)) {\n      throw new Error(sha_variant_error);\n    }\n    super(variant, inputFormat, options);\n    const resolvedOptions = options || {};\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    this.getMAC = this._getHMAC;\n    this.HMACSupported = true;\n    this.bigEndianMod = -1;\n    this.converterFunc = getStrConverter(this.inputFormat, this.utfType, this.bigEndianMod);\n    this.roundFunc = roundSHA512;\n    this.stateCloneFunc = function (state): Int_64[] {\n      return state.slice();\n    };\n    this.newStateFunc = getNewState512;\n    this.finalizeFunc = function (remainder, remainderBinLen, processedBinLen, H): number[] {\n      return finalizeSHA512(remainder, remainderBinLen, processedBinLen, H, variant);\n    };\n\n    this.intermediateState = getNewState512(variant);\n    this.variantBlockSize = 1024;\n    this.outputBinLen = \"SHA-384\" === variant ? 384 : 512;\n    this.isVariableLen = false;\n\n    if (resolvedOptions[\"hmacKey\"]) {\n      this._setHMACKey(parseInputOption(\"hmacKey\", resolvedOptions[\"hmacKey\"], this.bigEndianMod));\n    }\n  }\n}\n","import { jsSHABase, packedLEConcat, sha_variant_error, mac_rounds_error, TWO_PWR_32, parseInputOption } from \"./common\";\nimport {\n  packedValue,\n  CSHAKEOptionsNoEncodingType,\n  CSHAKEOptionsEncodingType,\n  SHAKEOptionsNoEncodingType,\n  SHAKEOptionsEncodingType,\n  KMACOptionsNoEncodingType,\n  KMACOptionsEncodingType,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n  ResolvedCSHAKEOptionsNoEncodingType,\n  ResolvedKMACOptionsNoEncodingType,\n} from \"./custom_types\";\nimport { getStrConverter } from \"./converters\";\nimport { Int_64, rotl_64, xor_64_2, xor_64_5 } from \"./primitives_64\";\n\ntype FixedLengthVariantType = \"SHA3-224\" | \"SHA3-256\" | \"SHA3-384\" | \"SHA3-512\" | \"SHAKE128\" | \"SHAKE256\";\n\ntype VariantType = FixedLengthVariantType | \"SHAKE128\" | \"SHAKE256\" | \"CSHAKE128\" | \"CSHAKE256\" | \"KMAC128\" | \"KMAC256\";\n\nconst rc_sha3 = [\n  new Int_64(0x00000000, 0x00000001),\n  new Int_64(0x00000000, 0x00008082),\n  new Int_64(0x80000000, 0x0000808a),\n  new Int_64(0x80000000, 0x80008000),\n  new Int_64(0x00000000, 0x0000808b),\n  new Int_64(0x00000000, 0x80000001),\n  new Int_64(0x80000000, 0x80008081),\n  new Int_64(0x80000000, 0x00008009),\n  new Int_64(0x00000000, 0x0000008a),\n  new Int_64(0x00000000, 0x00000088),\n  new Int_64(0x00000000, 0x80008009),\n  new Int_64(0x00000000, 0x8000000a),\n  new Int_64(0x00000000, 0x8000808b),\n  new Int_64(0x80000000, 0x0000008b),\n  new Int_64(0x80000000, 0x00008089),\n  new Int_64(0x80000000, 0x00008003),\n  new Int_64(0x80000000, 0x00008002),\n  new Int_64(0x80000000, 0x00000080),\n  new Int_64(0x00000000, 0x0000800a),\n  new Int_64(0x80000000, 0x8000000a),\n  new Int_64(0x80000000, 0x80008081),\n  new Int_64(0x80000000, 0x00008080),\n  new Int_64(0x00000000, 0x80000001),\n  new Int_64(0x80000000, 0x80008008),\n];\n\nconst r_sha3 = [\n  [0, 36, 3, 41, 18],\n  [1, 44, 10, 45, 2],\n  [62, 6, 43, 15, 61],\n  [28, 55, 25, 21, 56],\n  [27, 20, 39, 8, 14],\n];\n\n/**\n * Gets the state values for the specified SHA-3 variant.\n *\n * @param _variant Unused for this family.\n * @returns The initial state values.\n */\nfunction getNewState(_variant: VariantType): Int_64[][] {\n  let i;\n  const retVal = [];\n\n  for (i = 0; i < 5; i += 1) {\n    retVal[i] = [new Int_64(0, 0), new Int_64(0, 0), new Int_64(0, 0), new Int_64(0, 0), new Int_64(0, 0)];\n  }\n\n  return retVal;\n}\n\n/**\n * Returns a clone of the given SHA3 state.\n *\n * @param state The state to be cloned.\n * @returns The cloned state.\n */\nfunction cloneSHA3State(state: Int_64[][]): Int_64[][] {\n  let i;\n  const clone = [];\n  for (i = 0; i < 5; i += 1) {\n    clone[i] = state[i].slice();\n  }\n\n  return clone;\n}\n\n/**\n * Performs a round of SHA-3 hashing over a block. This clobbers `state`.\n *\n * @param block The binary array representation of the block to hash.\n * @param state Hash state from a previous round.\n * @returns The resulting state value.\n */\nfunction roundSHA3(block: number[] | null, state: Int_64[][]): Int_64[][] {\n  let round, x, y, B;\n  const C = [],\n    D = [];\n\n  if (null !== block) {\n    for (x = 0; x < block.length; x += 2) {\n      state[(x >>> 1) % 5][((x >>> 1) / 5) | 0] = xor_64_2(\n        state[(x >>> 1) % 5][((x >>> 1) / 5) | 0],\n        new Int_64(block[x + 1], block[x])\n      );\n    }\n  }\n\n  for (round = 0; round < 24; round += 1) {\n    /* Any SHA-3 variant name will do here */\n    B = getNewState(\"SHA3-384\");\n\n    /* Perform theta step */\n    for (x = 0; x < 5; x += 1) {\n      C[x] = xor_64_5(state[x][0], state[x][1], state[x][2], state[x][3], state[x][4]);\n    }\n    for (x = 0; x < 5; x += 1) {\n      D[x] = xor_64_2(C[(x + 4) % 5], rotl_64(C[(x + 1) % 5], 1));\n    }\n    for (x = 0; x < 5; x += 1) {\n      for (y = 0; y < 5; y += 1) {\n        state[x][y] = xor_64_2(state[x][y], D[x]);\n      }\n    }\n\n    /* Perform combined ro and pi steps */\n    for (x = 0; x < 5; x += 1) {\n      for (y = 0; y < 5; y += 1) {\n        B[y][(2 * x + 3 * y) % 5] = rotl_64(state[x][y], r_sha3[x][y]);\n      }\n    }\n\n    /* Perform chi step */\n    for (x = 0; x < 5; x += 1) {\n      for (y = 0; y < 5; y += 1) {\n        state[x][y] = xor_64_2(\n          B[x][y],\n          new Int_64(\n            ~B[(x + 1) % 5][y].highOrder & B[(x + 2) % 5][y].highOrder,\n            ~B[(x + 1) % 5][y].lowOrder & B[(x + 2) % 5][y].lowOrder\n          )\n        );\n      }\n    }\n\n    /* Perform iota step */\n    state[0][0] = xor_64_2(state[0][0], rc_sha3[round]);\n  }\n\n  return state;\n}\n\n/**\n * Finalizes the SHA-3 hash. This clobbers `remainder` and `state`.\n *\n * @param remainder Any leftover unprocessed packed ints that still need to be processed.\n * @param remainderBinLen The number of bits in `remainder`.\n * @param _processedBinLen Unused for this family.\n * @param state The state from a previous round.\n * @param blockSize The block size/rate of the variant in bits\n * @param delimiter The delimiter value for the variant\n * @param outputLen The output length for the variant in bits\n * @returns The array of integers representing the SHA-3 hash of message.\n */\nfunction finalizeSHA3(\n  remainder: number[],\n  remainderBinLen: number,\n  _processedBinLen: number,\n  state: Int_64[][],\n  blockSize: number,\n  delimiter: number,\n  outputLen: number\n): number[] {\n  let i,\n    state_offset = 0,\n    temp;\n  const retVal = [],\n    binaryStringInc = blockSize >>> 5,\n    remainderIntLen = remainderBinLen >>> 5;\n\n  /* Process as many blocks as possible, some may be here for multiple rounds\n\t\twith SHAKE\n\t*/\n  for (i = 0; i < remainderIntLen && remainderBinLen >= blockSize; i += binaryStringInc) {\n    state = roundSHA3(remainder.slice(i, i + binaryStringInc), state);\n    remainderBinLen -= blockSize;\n  }\n\n  remainder = remainder.slice(i);\n  remainderBinLen = remainderBinLen % blockSize;\n\n  /* Pad out the remainder to a full block */\n  while (remainder.length < binaryStringInc) {\n    remainder.push(0);\n  }\n\n  /* Find the next \"empty\" byte for the 0x80 and append it via an xor */\n  i = remainderBinLen >>> 3;\n  remainder[i >> 2] ^= delimiter << (8 * (i % 4));\n\n  remainder[binaryStringInc - 1] ^= 0x80000000;\n  state = roundSHA3(remainder, state);\n\n  while (retVal.length * 32 < outputLen) {\n    temp = state[state_offset % 5][(state_offset / 5) | 0];\n    retVal.push(temp.lowOrder);\n    if (retVal.length * 32 >= outputLen) {\n      break;\n    }\n    retVal.push(temp.highOrder);\n    state_offset += 1;\n\n    if (0 === (state_offset * 64) % blockSize) {\n      roundSHA3(null, state);\n      state_offset = 0;\n    }\n  }\n\n  return retVal;\n}\n\n/**\n * Performs NIST left_encode function returned with no extra garbage bits. `x` is limited to <= 9007199254740991.\n *\n * @param x 32-bit number to to encode.\n * @returns The NIST specified output of the function.\n */\nfunction left_encode(x: number): packedValue {\n  let byteOffset,\n    byte,\n    numEncodedBytes = 0;\n  /* JavaScript numbers max out at 0x1FFFFFFFFFFFFF (7 bytes) so this will return a maximum of 7 + 1 = 8 bytes */\n  const retVal = [0, 0],\n    x_64 = [x & 0xffffffff, (x / TWO_PWR_32) & 0x1fffff];\n\n  for (byteOffset = 6; byteOffset >= 0; byteOffset--) {\n    /* This will surprisingly work for large shifts because JavaScript masks the shift amount by 0x1F */\n    byte = (x_64[byteOffset >> 2] >>> (8 * byteOffset)) & 0xff;\n\n    /* Starting from the most significant byte of a 64-bit number, start recording the first non-0 byte and then\n       every byte thereafter */\n    if (byte !== 0 || numEncodedBytes !== 0) {\n      retVal[(numEncodedBytes + 1) >> 2] |= byte << ((numEncodedBytes + 1) * 8);\n      numEncodedBytes += 1;\n    }\n  }\n  numEncodedBytes = numEncodedBytes !== 0 ? numEncodedBytes : 1;\n  retVal[0] |= numEncodedBytes;\n\n  return { value: numEncodedBytes + 1 > 4 ? retVal : [retVal[0]], binLen: 8 + numEncodedBytes * 8 };\n}\n\n/**\n * Performs NIST right_encode function returned with no extra garbage bits. `x` is limited to <= 9007199254740991.\n *\n * @param x 32-bit number to to encode.\n * @returns The NIST specified output of the function.\n */\nfunction right_encode(x: number): packedValue {\n  let byteOffset,\n    byte,\n    numEncodedBytes = 0;\n  /* JavaScript numbers max out at 0x1FFFFFFFFFFFFF (7 bytes) so this will return a maximum of 7 + 1 = 8 bytes */\n  const retVal = [0, 0],\n    x_64 = [x & 0xffffffff, (x / TWO_PWR_32) & 0x1fffff];\n\n  for (byteOffset = 6; byteOffset >= 0; byteOffset--) {\n    /* This will surprisingly work for large shifts because JavaScript masks the shift amount by 0x1F */\n    byte = (x_64[byteOffset >> 2] >>> (8 * byteOffset)) & 0xff;\n\n    /* Starting from the most significant byte of a 64-bit number, start recording the first non-0 byte and then\n       every byte thereafter */\n    if (byte !== 0 || numEncodedBytes !== 0) {\n      retVal[numEncodedBytes >> 2] |= byte << (numEncodedBytes * 8);\n      numEncodedBytes += 1;\n    }\n  }\n  numEncodedBytes = numEncodedBytes !== 0 ? numEncodedBytes : 1;\n  retVal[numEncodedBytes >> 2] |= numEncodedBytes << (numEncodedBytes * 8);\n\n  return { value: numEncodedBytes + 1 > 4 ? retVal : [retVal[0]], binLen: 8 + numEncodedBytes * 8 };\n}\n\n/**\n * Performs NIST encode_string function.\n *\n * @param input Packed array of integers.\n * @returns NIST encode_string output.\n */\nfunction encode_string(input: packedValue): packedValue {\n  return packedLEConcat(left_encode(input[\"binLen\"]), input);\n}\n\n/**\n * Performs NIST byte_pad function.\n *\n * @param packed Packed array of integers.\n * @param outputByteLen Desired length of the output in bytes, assumed to be a multiple of 4.\n * @returns NIST byte_pad output.\n */\nfunction byte_pad(packed: packedValue, outputByteLen: number): number[] {\n  let encodedLen = left_encode(outputByteLen),\n    i;\n\n  encodedLen = packedLEConcat(encodedLen, packed);\n  const outputIntLen = outputByteLen >>> 2,\n    intsToAppend = (outputIntLen - (encodedLen[\"value\"].length % outputIntLen)) % outputIntLen;\n\n  for (i = 0; i < intsToAppend; i++) {\n    encodedLen[\"value\"].push(0);\n  }\n\n  return encodedLen[\"value\"];\n}\n\n/**\n * Parses/validate constructor options for a CSHAKE variant\n *\n * @param options Option given to constructor\n */\nfunction resolveCSHAKEOptions(options: CSHAKEOptionsNoEncodingType): ResolvedCSHAKEOptionsNoEncodingType {\n  const resolvedOptions = options || {};\n\n  return {\n    funcName: parseInputOption(\"funcName\", resolvedOptions[\"funcName\"], 1, { value: [], binLen: 0 }),\n    customization: parseInputOption(\"Customization\", resolvedOptions[\"customization\"], 1, { value: [], binLen: 0 }),\n  };\n}\n\n/**\n * Parses/validate constructor options for a KMAC variant\n *\n * @param options Option given to constructor\n */\nfunction resolveKMACOptions(options: KMACOptionsNoEncodingType): ResolvedKMACOptionsNoEncodingType {\n  const resolvedOptions = options || {};\n\n  return {\n    kmacKey: parseInputOption(\"kmacKey\", resolvedOptions[\"kmacKey\"], 1),\n    /* This is little-endian packed \"KMAC\" */\n    funcName: { value: [0x43414d4b], binLen: 32 },\n    customization: parseInputOption(\"Customization\", resolvedOptions[\"customization\"], 1, { value: [], binLen: 0 }),\n  };\n}\n\nexport default class jsSHA extends jsSHABase<Int_64[][], VariantType> {\n  intermediateState: Int_64[][];\n  variantBlockSize: number;\n  bigEndianMod: -1 | 1;\n  outputBinLen: number;\n  isVariableLen: boolean;\n  HMACSupported: boolean;\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  converterFunc: (input: any, existingBin: number[], existingBinLen: number) => packedValue;\n  roundFunc: (block: number[], H: Int_64[][]) => Int_64[][];\n  finalizeFunc: (\n    remainder: number[],\n    remainderBinLen: number,\n    processedBinLen: number,\n    H: Int_64[][],\n    outputLen: number\n  ) => number[];\n  stateCloneFunc: (state: Int_64[][]) => Int_64[][];\n  newStateFunc: (variant: VariantType) => Int_64[][];\n  getMAC: ((options: { outputLen: number }) => number[]) | null;\n\n  constructor(variant: FixedLengthVariantType, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(\n    variant: FixedLengthVariantType,\n    inputFormat: FormatNoTextType,\n    options?: FixedLengthOptionsNoEncodingType\n  );\n  constructor(variant: \"SHAKE128\" | \"SHAKE256\", inputFormat: \"TEXT\", options?: SHAKEOptionsEncodingType);\n  constructor(variant: \"SHAKE128\" | \"SHAKE256\", inputFormat: FormatNoTextType, options?: SHAKEOptionsNoEncodingType);\n  constructor(variant: \"CSHAKE128\" | \"CSHAKE256\", inputFormat: \"TEXT\", options?: CSHAKEOptionsEncodingType);\n  constructor(variant: \"CSHAKE128\" | \"CSHAKE256\", inputFormat: FormatNoTextType, options?: CSHAKEOptionsNoEncodingType);\n  constructor(variant: \"KMAC128\" | \"KMAC256\", inputFormat: \"TEXT\", options: KMACOptionsEncodingType);\n  constructor(variant: \"KMAC128\" | \"KMAC256\", inputFormat: FormatNoTextType, options: KMACOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    let delimiter = 0x06,\n      variantBlockSize = 0;\n    super(variant, inputFormat, options);\n    const resolvedOptions = options || {};\n\n    /* In other variants, this was done after variable initialization but need to do it earlier here becaue we want to\n       avoid KMAC initialization */\n    if (this.numRounds !== 1) {\n      if (resolvedOptions[\"kmacKey\"] || resolvedOptions[\"hmacKey\"]) {\n        throw new Error(mac_rounds_error);\n      } else if (this.shaVariant === \"CSHAKE128\" || this.shaVariant === \"CSHAKE256\") {\n        throw new Error(\"Cannot set numRounds for CSHAKE variants\");\n      }\n    }\n\n    this.bigEndianMod = 1;\n    this.converterFunc = getStrConverter(this.inputFormat, this.utfType, this.bigEndianMod);\n    this.roundFunc = roundSHA3;\n    this.stateCloneFunc = cloneSHA3State;\n    this.newStateFunc = getNewState;\n    this.intermediateState = getNewState(variant);\n\n    this.isVariableLen = false;\n    switch (variant) {\n      case \"SHA3-224\":\n        this.variantBlockSize = variantBlockSize = 1152;\n        this.outputBinLen = 224;\n        this.HMACSupported = true;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getHMAC;\n        break;\n      case \"SHA3-256\":\n        this.variantBlockSize = variantBlockSize = 1088;\n        this.outputBinLen = 256;\n        this.HMACSupported = true;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getHMAC;\n        break;\n      case \"SHA3-384\":\n        this.variantBlockSize = variantBlockSize = 832;\n        this.outputBinLen = 384;\n        this.HMACSupported = true;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getHMAC;\n        break;\n      case \"SHA3-512\":\n        this.variantBlockSize = variantBlockSize = 576;\n        this.outputBinLen = 512;\n        this.HMACSupported = true;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getHMAC;\n        break;\n      case \"SHAKE128\":\n        delimiter = 0x1f;\n        this.variantBlockSize = variantBlockSize = 1344;\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        this.getMAC = null;\n        break;\n      case \"SHAKE256\":\n        delimiter = 0x1f;\n        this.variantBlockSize = variantBlockSize = 1088;\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        this.getMAC = null;\n        break;\n      case \"KMAC128\":\n        delimiter = 0x4;\n        this.variantBlockSize = variantBlockSize = 1344;\n        this._initializeKMAC(options);\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getKMAC;\n        break;\n      case \"KMAC256\":\n        delimiter = 0x4;\n        this.variantBlockSize = variantBlockSize = 1088;\n        this._initializeKMAC(options);\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.getMAC = this._getKMAC;\n        break;\n      case \"CSHAKE128\":\n        this.variantBlockSize = variantBlockSize = 1344;\n        delimiter = this._initializeCSHAKE(options);\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        this.getMAC = null;\n        break;\n      case \"CSHAKE256\":\n        this.variantBlockSize = variantBlockSize = 1088;\n        delimiter = this._initializeCSHAKE(options);\n        /* This will be set in getHash */\n        this.outputBinLen = -1;\n        this.isVariableLen = true;\n        this.HMACSupported = false;\n        this.getMAC = null;\n        break;\n      default:\n        throw new Error(sha_variant_error);\n    }\n\n    /* This needs to be down here as CSHAKE can change its delimiter */\n    this.finalizeFunc = function (remainder, remainderBinLen, processedBinLen, state, outputBinLen): number[] {\n      return finalizeSHA3(\n        remainder,\n        remainderBinLen,\n        processedBinLen,\n        state,\n        variantBlockSize,\n        delimiter,\n        outputBinLen\n      );\n    };\n\n    if (resolvedOptions[\"hmacKey\"]) {\n      this._setHMACKey(parseInputOption(\"hmacKey\", resolvedOptions[\"hmacKey\"], this.bigEndianMod));\n    }\n  }\n\n  /**\n   * Initialize CSHAKE variants.\n   *\n   * @param options Options containing CSHAKE params.\n   * @param funcNameOverride Overrides any \"funcName\" present in `options` (used with KMAC)\n   * @returns The delimiter to be used\n   */\n  protected _initializeCSHAKE(options?: CSHAKEOptionsNoEncodingType, funcNameOverride?: packedValue): number {\n    const resolvedOptions = resolveCSHAKEOptions(options || {});\n    if (funcNameOverride) {\n      resolvedOptions[\"funcName\"] = funcNameOverride;\n    }\n    const packedParams = packedLEConcat(\n      encode_string(resolvedOptions[\"funcName\"]),\n      encode_string(resolvedOptions[\"customization\"])\n    );\n\n    /* CSHAKE is defined to be a call to SHAKE iff both the customization and function-name string are both empty.  This\n       can be accomplished by processing nothing in this step. */\n    if (resolvedOptions[\"customization\"][\"binLen\"] !== 0 || resolvedOptions[\"funcName\"][\"binLen\"] !== 0) {\n      const byte_pad_out = byte_pad(packedParams, this.variantBlockSize >>> 3);\n      for (let i = 0; i < byte_pad_out.length; i += this.variantBlockSize >>> 5) {\n        this.intermediateState = this.roundFunc(\n          byte_pad_out.slice(i, i + (this.variantBlockSize >>> 5)),\n          this.intermediateState\n        );\n        this.processedLen += this.variantBlockSize;\n      }\n      return 0x04;\n    } else {\n      return 0x1f;\n    }\n  }\n\n  /**\n   * Initialize KMAC variants.\n   *\n   * @param options Options containing KMAC params.\n   */\n  protected _initializeKMAC(options: KMACOptionsNoEncodingType): void {\n    const resolvedOptions = resolveKMACOptions(options || {});\n\n    this._initializeCSHAKE(options, resolvedOptions[\"funcName\"]);\n    const byte_pad_out = byte_pad(encode_string(resolvedOptions[\"kmacKey\"]), this.variantBlockSize >>> 3);\n    for (let i = 0; i < byte_pad_out.length; i += this.variantBlockSize >>> 5) {\n      this.intermediateState = this.roundFunc(\n        byte_pad_out.slice(i, i + (this.variantBlockSize >>> 5)),\n        this.intermediateState\n      );\n      this.processedLen += this.variantBlockSize;\n    }\n    this.macKeySet = true;\n  }\n\n  /**\n   * Returns the the KMAC in the specified format.\n   *\n   * @param options Hashmap of extra outputs options. `outputLen` must be specified.\n   * @returns The KMAC in the format specified.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected _getKMAC(options: { outputLen: number }): number[] {\n    const concatedRemainder = packedLEConcat(\n      { value: this.remainder.slice(), binLen: this.remainderLen },\n      right_encode(options[\"outputLen\"])\n    );\n\n    return this.finalizeFunc(\n      concatedRemainder[\"value\"],\n      concatedRemainder[\"binLen\"],\n      this.processedLen,\n      this.stateCloneFunc(this.intermediateState),\n      options[\"outputLen\"]\n    );\n  }\n}\n","import { sha_variant_error } from \"./common\";\nimport {\n  CSHAKEOptionsEncodingType,\n  CSHAKEOptionsNoEncodingType,\n  SHAKEOptionsEncodingType,\n  SHAKEOptionsNoEncodingType,\n  EncodingType,\n  FixedLengthOptionsEncodingType,\n  FixedLengthOptionsNoEncodingType,\n  FormatNoTextType,\n  KMACOptionsNoEncodingType,\n  KMACOptionsEncodingType,\n} from \"./custom_types\";\nimport jsSHA1 from \"./sha1\";\nimport jsSHA256 from \"./sha256\";\nimport jsSHA512 from \"./sha512\";\nimport jsSHA3 from \"./sha3\";\n\ntype FixedLengthVariantType =\n  | \"SHA-1\"\n  | \"SHA-224\"\n  | \"SHA-256\"\n  | \"SHA-384\"\n  | \"SHA-512\"\n  | \"SHA3-224\"\n  | \"SHA3-256\"\n  | \"SHA3-384\"\n  | \"SHA3-512\";\n\nexport default class jsSHA {\n  private readonly shaObj: jsSHA1 | jsSHA256 | jsSHA512 | jsSHA3;\n  /**\n   * @param variant The desired SHA variant (SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA3-224, SHA3-256, SHA3-256,\n   *   SHA3-384, SHA3-512, SHAKE128, SHAKE256, CSHAKE128, CSHAKE256, KMAC128, or KMAC256) as a string.\n   * @param inputFormat The input format to be used in future `update` calls (TEXT, HEX, B64, BYTES, ARRAYBUFFER,\n   *   or UINT8ARRAY) as a string.\n   * @param options Options in the form of { encoding?: \"UTF8\" | \"UTF16BE\" | \"UTF16LE\"; numRounds?: number }.\n   *   `encoding` is for only TEXT input (defaults to UTF8) and `numRounds` defaults to 1.\n   *   `numRounds` is not valid for any of the MAC or CSHAKE variants.\n   *   * If the variant supports HMAC, `options` may have an additional `hmacKey` key which must be in the form of\n   *     {value: <INPUT>, format: <FORMAT>, encoding?: \"UTF8\" | \"UTF16BE\" | \"UTF16LE\"} where <FORMAT> takes the same\n   *     values as `inputFormat` and <INPUT> can be a `string | ArrayBuffer | Uint8Array` depending on <FORMAT>.\n   *     Supplying this key switches to HMAC calculation and replaces the now deprecated call to `setHMACKey`.\n   *   * If the variant is CSHAKE128 or CSHAKE256, `options` may have two additional keys, `customization` and `funcName`,\n   *     which are the NIST customization and function-name strings.  Both must be in the same form as `hmacKey`.\n   *   * If the variant is KMAC128 or KMAC256, `options` can include the `customization` key from CSHAKE variants and\n   *     *must* have a `kmacKey` key that takes the same form as the `customization` key.\n   */\n  constructor(variant: FixedLengthVariantType, inputFormat: \"TEXT\", options?: FixedLengthOptionsEncodingType);\n  constructor(\n    variant: FixedLengthVariantType,\n    inputFormat: FormatNoTextType,\n    options?: FixedLengthOptionsNoEncodingType\n  );\n  constructor(variant: \"SHAKE128\" | \"SHAKE256\", inputFormat: \"TEXT\", options?: SHAKEOptionsEncodingType);\n  constructor(variant: \"SHAKE128\" | \"SHAKE256\", inputFormat: FormatNoTextType, options?: SHAKEOptionsNoEncodingType);\n  constructor(variant: \"CSHAKE128\" | \"CSHAKE256\", inputFormat: \"TEXT\", options?: CSHAKEOptionsEncodingType);\n  constructor(variant: \"CSHAKE128\" | \"CSHAKE256\", inputFormat: FormatNoTextType, options?: CSHAKEOptionsNoEncodingType);\n  constructor(variant: \"KMAC128\" | \"KMAC256\", inputFormat: \"TEXT\", options: KMACOptionsEncodingType);\n  constructor(variant: \"KMAC128\" | \"KMAC256\", inputFormat: FormatNoTextType, options: KMACOptionsNoEncodingType);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(variant: any, inputFormat: any, options?: any) {\n    if (\"SHA-1\" == variant) {\n      this.shaObj = new jsSHA1(variant, inputFormat, options);\n    } else if (\"SHA-224\" == variant || \"SHA-256\" == variant) {\n      this.shaObj = new jsSHA256(variant, inputFormat, options);\n    } else if (\"SHA-384\" == variant || \"SHA-512\" == variant) {\n      this.shaObj = new jsSHA512(variant, inputFormat, options);\n    } else if (\n      \"SHA3-224\" == variant ||\n      \"SHA3-256\" == variant ||\n      \"SHA3-384\" == variant ||\n      \"SHA3-512\" == variant ||\n      \"SHAKE128\" == variant ||\n      \"SHAKE256\" == variant ||\n      \"CSHAKE128\" == variant ||\n      \"CSHAKE256\" == variant ||\n      \"KMAC128\" == variant ||\n      \"KMAC256\" == variant\n    ) {\n      this.shaObj = new jsSHA3(variant, inputFormat, options);\n    } else {\n      throw new Error(sha_variant_error);\n    }\n  }\n\n  /**\n   * Takes `input` and hashes as many blocks as possible. Stores the rest for either a future `update` or `getHash` call.\n   *\n   * @param input The input to be hashed\n   */\n  update(input: string | ArrayBuffer | Uint8Array): void {\n    this.shaObj.update(input);\n  }\n\n  /**\n   * Returns the desired SHA or MAC (if a HMAC/KMAC key was specified) hash of the input fed in via `update` calls.\n   *\n   * @param format The desired output formatting (B64, HEX, BYTES, ARRAYBUFFER, or UINT8ARRAY) as a string.\n   * @param options Options in the form of { outputUpper?: boolean; b64Pad?: string; outputLen?: number;  }.\n   *   `outputLen` is required for variable length output variants (this option was previously called `shakeLen` which\n   *    is now deprecated).\n   *   `outputUpper` is only for HEX output (defaults to false) and b64pad is only for B64 output (defaults to \"=\").\n   * @returns The hash in the format specified.\n   */\n  getHash(format: \"HEX\", options?: { outputUpper?: boolean; outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"B64\", options?: { b64Pad?: string; outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"BYTES\", options?: { outputLen?: number; shakeLen?: number }): string;\n  getHash(format: \"UINT8ARRAY\", options?: { outputLen?: number; shakeLen?: number }): Uint8Array;\n  getHash(format: \"ARRAYBUFFER\", options?: { outputLen?: number; shakeLen?: number }): ArrayBuffer;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getHash(format: any, options?: any): any {\n    return this.shaObj.getHash(format, options);\n  }\n\n  /**\n   * Sets the HMAC key for an eventual `getHMAC` call.  Must be called immediately after jsSHA object instantiation.\n   * Now deprecated in favor of setting the `hmacKey` at object instantiation.\n   *\n   * @param key The key used to calculate the HMAC\n   * @param inputFormat The format of key (HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY) as a string.\n   * @param options Options in the form of { encoding?: \"UTF8\" | \"UTF16BE\" | \"UTF16LE }.  `encoding` is only for TEXT\n   *   and defaults to UTF8.\n   */\n  setHMACKey(key: string, inputFormat: \"TEXT\", options?: { encoding?: EncodingType }): void;\n  setHMACKey(key: string, inputFormat: \"B64\" | \"HEX\" | \"BYTES\"): void;\n  setHMACKey(key: ArrayBuffer, inputFormat: \"ARRAYBUFFER\"): void;\n  setHMACKey(key: Uint8Array, inputFormat: \"UINT8ARRAY\"): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  setHMACKey(key: any, inputFormat: any, options?: any): void {\n    this.shaObj.setHMACKey(key, inputFormat, options);\n  }\n\n  /**\n   * Returns the the HMAC in the specified format using the key given by a previous `setHMACKey` call. Now deprecated\n   * in favor of just calling `getHash`.\n   *\n   * @param format The desired output formatting (B64, HEX, BYTES, ARRAYBUFFER, or UINT8ARRAY) as a string.\n   * @param options Options in the form of { outputUpper?: boolean; b64Pad?: string }. `outputUpper` is only for HEX\n   *   output (defaults to false) and `b64pad` is only for B64 output (defaults to \"=\").\n   * @returns The HMAC in the format specified.\n   */\n  getHMAC(format: \"HEX\", options?: { outputUpper?: boolean }): string;\n  getHMAC(format: \"B64\", options?: { b64Pad?: string }): string;\n  getHMAC(format: \"BYTES\"): string;\n  getHMAC(format: \"UINT8ARRAY\"): Uint8Array;\n  getHMAC(format: \"ARRAYBUFFER\"): ArrayBuffer;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getHMAC(format: any, options?: any): any {\n    return this.shaObj.getHMAC(format, options);\n  }\n}\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n"],"sourceRoot":""}